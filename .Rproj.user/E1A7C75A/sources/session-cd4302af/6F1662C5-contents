


# TOPP --------------------------------------------------------------------


library(tidyverse)
library(lubridate)
library(scales)
library(RColorBrewer)
library(ggrepel)
library(clipr)

library(gtsummary)
library(survey) # gtsummary bruker survey (som kan weights)

setwd("~/00_PhD_lokal/NRVU")
# setwd("~/Lokal_NRVU")

Sys.setlocale(category = "LC_ALL", locale = "Norwegian.UTF-8")


df0 <- read_csv2("NRVU_2016_2022_reisefil.csv")
pf0 <- read_csv2("NRVU_2016_2022_personfil.csv")
formal_tabell <- read_csv2( "NRVU_formal_forenkling.csv")


d18_0 <- read_csv2("RVU 2016-2018 Daglige reiser_Final.csv")
p18_0 <- read_csv2("RVU 2016-2018 Personfil_Final.csv")

d19_0 <- read_csv2("RVU 2019 Daglige reiser_Anonymisert_Vektet_1.csv")
p19_0 <- read_csv2("RVU 2019 Personfil_Anonymisert_Vektet.csv")


d20_0 <- read_csv2("2020/RVU 2020 Reisefil Opinion_07.10.2021.csv")
p20_0 <- read_csv2("2020/RVU 2020 Personfil Opinion_07.10.2021.csv")

d21_0 <- read.csv2("2021/RVU 2021 Reisefil 05.september 2022_vektet nasjonalt og regionalt.csv")
p21_0 <- read.csv2("2021/RVU 2021 Personfil 05.september 2022_vektet nasjonalt og regionalt.csv")

d22_0 <- read_csv2("2022/RVU 2022 Reisefil 17.04.23_Vektet_nasjonalt og byområder_NY.csv")
p22_0 <- read_csv2("2022/RVU 2022 Personfil 17.04.23_Vektet_nasjonalt og byområder_NY.csv")




# samle nrvu - daglige reiser --------------------------------------------------------------------


d18  <- d18_0 %>% 
  mutate(across(matches("GRUNNKRETS|zipcode"), ~as.numeric(.)),
         across(matches("GRUNNKRETS|ID_NUM"), ~as.character(.))   # fjerne første 0 i grunnkretsnummer, for å matche med gr_larvik.
  ) %>% 
  select(-matches("Busstop|TRANS_|_VENTE|_BARN|BOSTED_ANNET2r1|OPPMOTE_STED")) %>% 
  mutate(date = as.Date(date, c("%d-%m-%Y"))) %>% 
  unite(., col = "wt_nat_reg", c(WT_total_2016_17, WT_total_2018), na.rm = T) %>% 
  mutate(wt_nat_reg = as.numeric(wt_nat_reg)) %>% 
  group_by(ID_NUM) %>% 
  mutate(antall_reiser = n()) %>% 
  ungroup() %>% 
  rename(age = Alder,
         age_cat = Alder_rvu)


d19 <- d19_0 %>% 
  mutate(across(matches("GRUNNKRETS|zipcode"), ~as.numeric(.)),
         across(matches("GRUNNKRETS|ID_NUM"), ~as.character(.))   # fjerne første 0 i grunnkretsnummer, for å matche med gr_larvik.
  ) %>% 
  select(-matches("Busstop|TRANS_|_VENTE|_BARN|BOSTED_ANNET2r1|OPPMOTE_STED")) %>% 
  mutate(date = as.Date(date, c("%d-%m-%Y")),
         wt_nat_reg = Vekt_regional # d19 har Vekt_nasjonal, Vekt_regional. Jeg trooor nasjonal er KUN for nasjonal utvalget. mens Regional tar med nasjonal+tilleggsutvalget
         ) %>% 
  group_by(ID_NUM) %>% 
  mutate(antall_reiser = n()) %>% 
  ungroup() %>% 
  rename(Kjonn = c_kjonn,
         age = c_alder)


  
d20 <- d20_0 %>% 
  mutate(across(matches("GRUNNKRETS|zipcode"), ~as.numeric(.)),
         across(matches("GRUNNKRETS|ID_NUM"), ~as.character(.))   # fjerne første 0 i grunnkretsnummer, for å matche med gr_larvik.
  ) %>% 
  select(-matches("Busstop|TRANS_|_VENTE|_BARN|BOSTED_ANNET2r1|OPPMOTE_STED")) %>% 
  mutate(date = case_when(
    SOURCE== "EPINION" ~ as.Date(date, c("%d-%m-%Y")),
    SOURCE== "OPINION" ~ as.Date(date, c("%m/%d/%Y %H:%M")),
    T ~ NA_Date_
    ),
    date = as.Date(date)
    ) %>% 
  mutate(Month = str_to_title(month(date, label = T, abbr = F)),
         Year = year(date) ) %>% 
  group_by(uuid) %>% 
  mutate(antall_reiser = n()) %>% 
  ungroup() %>% 
  select(antall_reiser, Year, Month, date,everything()) %>% 
  rename(wt_nat_reg = Weight_final,
         Kjonn = gender)



d21  <- d21_0 %>% 
  mutate(across(matches("GRUNNKRETS|zipcode"), ~as.numeric(.)),
         across(matches("GRUNNKRETS|Ukedag"), ~as.character(.))   # fjerne første 0 i grunnkretsnummer, for å matche med gr_larvik.
  ) %>% 
  select(-matches("Busstop|TRANS_|_VENTE|_BARN|Reisedag|BOSTED_ANNET2r1|OPPMOTE_STED")) %>% 
  mutate(date = as.Date(Date, c("%m/%d/%Y"))) %>%
  mutate(Month = str_to_title(month(date, label = T, abbr = F)) ) %>% 
  group_by(uuid) %>% 
  mutate(antall_reiser = n()) %>% 
  ungroup() %>% 
  rename(Kjonn = gender,
         wt_nat_reg = Vekt) %>% 
  select(antall_reiser, Year, Month,date, everything()) 


d22 <- d22_0 %>% 
  mutate(across(matches("GRUNNKRETS|zipcode"), ~as.numeric(.)),
         across(matches("GRUNNKRETS|_FLOKK"), ~as.character(.))   # fjerne første 0 i grunnkretsnummer, for å matche med gr_larvik.
  ) %>% 
  select(-matches("Busstop|TRANS_|_VENTE|_BARN|Reisedag|BOSTED_ANNET2r1|OPPMOTE_STED|Speed")) %>% 
  mutate(date = as.Date(date, c("%m/%d/%Y %H:%M")),
         Month = str_to_title(month(date, label = T, abbr = F))) %>% 
  group_by(uuid) %>% 
  mutate(antall_reiser = n()
         ) %>% 
  ungroup() %>% 
  rename(wt_nat_reg = Vekt_nasjonal,
         Kjonn = gender
         ) %>% 
  select(antall_reiser, Year, Month,date, everything())





df <- d19 %>% 
  bind_rows(d18) %>% 
  bind_rows(d20) %>% 
  bind_rows(d21) %>% 
  bind_rows(d22) %>% 
  mutate(Month_fac = factor(Month, c("Januar",
                                 "Februar",
                                 "Mars",
                                 "April",
                                 "Mai",
                                 "Juni",
                                 "Juli",
                                 "August",
                                 "September",
                                 "Oktober",
                                 "November",
                                 "Desember"
  )),
  BOSTED_KommuneNummer = ifelse(is.na(BOSTED_KommuneNummer), q3rc_Home1_address_KommuneNr, BOSTED_KommuneNummer),
  q38_GJOREMAL_HOVED_HJEM = ifelse(q38rc_type_gjoremal_hjem == "Hjemreise", "Hjemreise", q38_GJOREMAL_HOVED),
  formal_hjem_wgma = ifelse(is.na(q38_GJOREMAL_HOVED_HJEM), GJOREMALc1, q38_GJOREMAL_HOVED_HJEM)
  ) %>% 
  mutate(formal_hjem_wgma = case_when(
    formal_hjem_wgma == "Arbeid/skole/studier" ~ "Arbeid/ skole/ studier",
    formal_hjem_wgma == "Hjem" ~ "Hjemreise",
    formal_hjem_wgma == "Hente / bringe / følge barn" ~ "Hente/bringe/-følge barn",
    formal_hjem_wgma == "Hente / bringe / følge voksne" ~ "Hente/bringe/-følge voksne",
    T ~ formal_hjem_wgma
  ),
  HTRM = case_when(
    HTRM == "Til fots" ~ "Til fots (hele veien)",
    HTRM_uten_fly == "Fly" ~ "Fly",
    HTRM_uten_fly == "Fly (rute- eller charterfly)" ~ "Fly",
    str_detect(HTRM, "Kollektivtransport") ~ "Kollektivtransport",
    str_detect(HTRM, "Motor|Moped") ~ "MC, moped",
    T ~ HTRM
    )
  ) %>% 
  mutate(fase = case_when(
    date < "2020-03-01" ~ "Pre-pandemic",
    date >= "2020-03-01" & date <= "2022-03-08" ~ "Mid-pandemic", # basert på Stringency index over 12 (0-100)
    T ~ "Post-pandemic"
  ), 
  fase = factor(fase, c("Pre-pandemic",
                        "Mid-pandemic",
                        "Post-pandemic"))
  
  ) %>% 
  mutate(alder_kat_wgma = case_when(age >= 15 & age <= 17 ~ '15- 17',
                               age >= 18 & age <= 24 ~ '18 - 24',
                               age >= 25 & age <= 34 ~ '25 - 34',
                               age >= 35 & age <= 44 ~ '35 - 44',
                               age >= 45 & age <= 54 ~ '45 - 54',
                               age >= 55 & age <= 66 ~ '55 - 66',
                               age >= 67 & age <= 74 ~ '67 - 74',
                               age >= 75 ~ '75 +',
                               T ~ NA_character_
  ),  alder_kat_wgma_1317 = case_when(age >= 13 & age <= 17 ~ '13 - 17',
                                      age >= 18 & age <= 24 ~ '18 - 24',
                                      age >= 25 & age <= 34 ~ '25 - 34',
                                      age >= 35 & age <= 44 ~ '35 - 44',
                                      age >= 45 & age <= 54 ~ '45 - 54',
                                      age >= 55 & age <= 66 ~ '55 - 66',
                                      age >= 67 & age <= 74 ~ '67 - 74',
                                      age >= 75 ~ '75 +',
                                      T ~ NA_character_
  )) %>% 
  mutate(Kjonn = case_when(
    Kjonn == "Kvinner" ~ "Kvinne",
    Kjonn == "Menn" ~ "Mann",
    T ~ Kjonn
  )) %>% 
  mutate(Year_group = case_when(
    Year == 2016 | Year == 2017 ~ "2016-2017",
    Year == 2018 | Year == 2019 ~ "2018-2019",
    T ~ as.character(Year)
    
  )) %>% 
  mutate(ID_year = case_when(
    !is.na(ID_NUM) ~ paste0(ID_NUM,"_", Year),
    !is.na(uuid) ~ paste0(uuid,"_", Year),
    T ~ "Mangler ID"
  )) %>% 
  mutate(antall_reiser_kat4 = case_when(
    antall_reiser == 0 ~ "0 reiser",
    antall_reiser < 3 ~ "1-2 reiser",
    antall_reiser <5  ~ "3-4 reiser",
    antall_reiser >4 ~ "5 reiser eller flere",
    T ~ as.character(antall_reiser)
  )) %>% 
  
  
  unite(col = "starttid_wgma", c(q41_STARTTID, STARTTID_Hidden_1), na.rm = T) %>% 
  mutate(starttid_wgma = case_when(
    str_detect(starttid_wgma, "Vet ikke|99") ~ NA_character_,
    T ~ starttid_wgma
    
  )) %>% 

  mutate(STARTTID_hour_wgma = as.numeric(substr(starttid_wgma, start = 1, stop = 2)),
         STARTTID_hour_wgma = ifelse(is.na(STARTTID_hour_wgma), STARTTID_1r1c1, STARTTID_hour_wgma),
         
         STARTTID_minute_wgma = as.numeric(substr(starttid_wgma, start = 4, stop = 5)),
         STARTTID_minute_wgma= ifelse(is.na(STARTTID_minute_wgma), as.numeric(STARTTID_1r1c2), STARTTID_minute_wgma),
         starttid_tot_minutes_wgma = STARTTID_hour_wgma*60 + STARTTID_minute_wgma
  ) %>% 
  mutate(starttid_intervall_wgma = case_when(
    starttid_tot_minutes_wgma<361~"00:00 - 06:00",
    starttid_tot_minutes_wgma<541~"06:01 - 09:00",
    starttid_tot_minutes_wgma<721~"09:01 - 12:00",
    starttid_tot_minutes_wgma<901~"12:01 - 15:00",
    starttid_tot_minutes_wgma<1021~"15:01 - 17:00",
    starttid_tot_minutes_wgma<1201~"17:01 - 20:00",
    starttid_tot_minutes_wgma<1441~"20:01 - 23:59",
    T ~ NA_character_
  )) %>% 
  
  select(antall_reiser, ID_year, Year, Month_fac,date, everything()) 



write_csv2(df, "NRVU_2016_2022_reisefil.csv")










# samle nrvu - personfiler --------------------------------------------




p18 <- p18_0 %>% 
  mutate(across(matches("GRUNNKRETS|zipcode"), ~as.numeric(.)),
         across(matches("GRUNNKRETS|Ukedag|BIL_MODELL|ARBEID_T|KM_JOBB|BIL_JOBB|JOBB_P5|PERSONER|BOTID|HJEM_STOPP"), ~as.character(.))   # fjerne første 0 i grunnkretsnummer, for å matche med gr_larvik.
  ) %>% 
  select(-matches("Busstop|TRANS_|_VENTE|_BARN|Reisedag|BOSTED_ANNET2r1|OPPMOTE_STED|HJEMME_P")) %>% 
  mutate(date = as.Date(date, c("%d-%m-%Y"))) %>% 
  rename(antall_reiser = Antall_Daglige_Reiser,
         age = Alder)


p19 <- p19_0 %>% 
  mutate(across(matches("GRUNNKRETS|zipcode"), ~as.numeric(.)),
         across(matches("GRUNNKRETS|Ukedag|BIL_MODELL|ARBEID_T|KM_JOBB|BIL_JOBB|JOBB_P5|PERSONER|BOTID|HJEM_STOPP"), ~as.character(.))   # fjerne første 0 i grunnkretsnummer, for å matche med gr_larvik.
  ) %>% 
  select(-matches("Busstop|TRANS_|_VENTE|_BARN|Reisedag|BOSTED_ANNET2r1|OPPMOTE_STED|HJEMME_P")) %>% 
  mutate(date = as.Date(date, c("%d-%m-%Y"))) %>% 
  rename(antall_reiser = Antall_Daglige_Reiser,
         age = c_alder,
         Kjonn = c_kjonn)


p20 <- p20_0 %>% 
  mutate(across(matches("GRUNNKRETS|zipcode"), ~as.numeric(.)),
         across(matches("GRUNNKRETS|Ukedag|BIL_MODELL|ARBEID_T|KM_JOBB|BIL_JOBB|JOBB_P5|PERSONER|BOTID|HJEM_STOPP"), ~as.character(.))   # fjerne første 0 i grunnkretsnummer, for å matche med gr_larvik.
  ) %>% 
  select(-matches("Busstop|TRANS_|_VENTE|_BARN|Reisedag|BOSTED_ANNET2r1|OPPMOTE_STED|HJEMME_P")) %>% 
  mutate(date = as.Date(Dato_rekodet, c("%m/%d/%Y")),
         Month = str_to_title(month(date, label = T, abbr = F)),
         Year = year(date) ) %>% 
  rename(antall_reiser = Antall_Daglige_Reiser,
         Kjonn = gender)

p21 <- p21_0 %>% 
  mutate(across(matches("GRUNNKRETS|zipcode"), ~as.numeric(.)),
         across(matches("GRUNNKRETS|Ukedag|BIL_MODELL|ARBEID_T|KM_JOBB|BIL_JOBB|JOBB_P5|PERSONER|BOTID|HJEM_STOPP"), ~as.character(.))   # fjerne første 0 i grunnkretsnummer, for å matche med gr_larvik.
  ) %>% 
  select(-matches("Busstop|TRANS_|_VENTE|_BARN|Reisedag|BOSTED_ANNET2r1|OPPMOTE_STED|HJEMME_P")) %>% 
  mutate(date = as.Date(Date, c("%m/%d/%Y")),
         Month = str_to_title(month(date, label = T, abbr = F)),
         Year = year(date) ) %>%  
  rename(antall_reiser = Antall_Daglige_Reiser,
         Kjonn = gender)


p22 <- p22_0 %>% 
  mutate(across(matches("GRUNNKRETS|zipcode"), ~as.numeric(.)),
         across(matches("GRUNNKRETS|Ukedag|BIL_MODELL|ARBEID_T|KM_JOBB|BIL_JOBB|JOBB_P5|PERSONER|BOTID|HJEM_STOPP"), ~as.character(.))   # fjerne første 0 i grunnkretsnummer, for å matche med gr_larvik.
  ) %>% 
  select(-matches("Busstop|TRANS_|_VENTE|_BARN|Reisedag|BOSTED_ANNET2r1|OPPMOTE_STED|HJEMME_P")) %>% 
  mutate(date = as.Date(date, c("%m/%d/%Y %H:%M")),
         Month = str_to_title(month(date, label = T, abbr = F))) %>% 
         
  rename(antall_reiser = Antall_Daglige_Reiser,
         Kjonn = Kjønn)




pf <- p19 %>% 
  bind_rows(p18) %>% 
  bind_rows(p20) %>% 
  bind_rows(p21) %>% 
  bind_rows(p22) %>% 
  mutate(Month_fac = factor(Month, c("Januar",
                                     "Februar",
                                     "Mars",
                                     "April",
                                     "Mai",
                                     "Juni",
                                     "Juli",
                                     "August",
                                     "September",
                                     "Oktober",
                                     "November",
                                     "Desember"
  )),
  BOSTED_KommuneNummer = ifelse(is.na(BOSTED_KommuneNummer), q3rc_Home1_address_KommuneNr, BOSTED_KommuneNummer)) %>% 

  mutate(fase = case_when(
    date < "2020-03-01" ~ "Pre-pandemic",
    date >= "2020-03-01" & date <= "2022-03-08" ~ "Mid-pandemic", # basert på Stringency index over 12 (0-100)
    T ~ "Post-pandemic"
  ), 
  fase = factor(fase, c("Pre-pandemic",
                        "Mid-pandemic",
                        "Post-pandemic"))
  
  ) %>% 
  mutate(alder_kat_wgma_1517 = case_when(age >= 15 & age <= 17 ~ '15 - 17',
                                    age >= 18 & age <= 24 ~ '18 - 24',
                                    age >= 25 & age <= 34 ~ '25 - 34',
                                    age >= 35 & age <= 44 ~ '35 - 44',
                                    age >= 45 & age <= 54 ~ '45 - 54',
                                    age >= 55 & age <= 66 ~ '55 - 66',
                                    age >= 67 & age <= 74 ~ '67 - 74',
                                    age >= 75 ~ '75 +',
                                    T ~ NA_character_
  ),
  alder_kat_wgma_1317 = case_when(age >= 13 & age <= 17 ~ '13 - 17',
                                  age >= 18 & age <= 24 ~ '18 - 24',
                                  age >= 25 & age <= 34 ~ '25 - 34',
                                  age >= 35 & age <= 44 ~ '35 - 44',
                                  age >= 45 & age <= 54 ~ '45 - 54',
                                  age >= 55 & age <= 66 ~ '55 - 66',
                                  age >= 67 & age <= 74 ~ '67 - 74',
                                  age >= 75 ~ '75 +',
                                  T ~ NA_character_
  )
  ) %>% 
  mutate(Kjonn = case_when(
    Kjonn == "Kvinner" ~ "Kvinne",
    Kjonn == "Menn" ~ "Mann",
    T ~ Kjonn
  )) %>% 
  mutate(Year_group = case_when(
    Year == 2016 | Year == 2017 ~ "2016-2017",
    Year == 2018 | Year == 2019 ~ "2018-2019",
    T ~ as.character(Year)
    
  )) %>% 
  mutate(ID_year = case_when(
    !is.na(ID_NUM) ~ paste0(ID_NUM,"_", Year),
    !is.na(uuid) ~ paste0(uuid,"_", Year),
    T ~ "Mangler ID"
  )) %>% 
  mutate(antall_reiser_kat4 = case_when(
    antall_reiser == 0 ~ "0 reiser",
    antall_reiser < 3 ~ "1-2 reiser",
    antall_reiser <5  ~ "3-4 reiser",
    antall_reiser >4 ~ "5 reiser eller flere",
    T ~ as.character(antall_reiser)
  )) %>% 
  unite(., col = "vane_bilforer_wgma", c(q83_VANE_BILFORER, VANE_BILFORER), na.rm = T, remove = F) %>% 
  unite(., col = "vane_bilpass_wgma" , c(q84_VANE_BILPASS, VANE_BILPASS), na.rm = T, remove = F) %>% 
  unite(., col = "vane_koll_wgma",     c(q85_VANE_KOLL, VANE_KOLL), na.rm = T, remove = F) %>% 
  unite(., col = "vane_sykkel_wgma", c(q86_VANE_SYKKEL, VANE_SYKKEL), na.rm = T, remove = F) %>% 
  unite(., col = "vane_fots_wgma", c(q87_VANE_FOTS, VANE_FOTS), na.rm = T, remove = F) %>% 
  mutate(across(matches("vane_.*wgma$"), ~ case_when(
    . == "Nesten hver dag, 5-7 ganger i uken" ~ 6,
    . == "3-4 ganger i uken" ~ 3.5, 
    . == "1-2 ganger i uken" ~ 1.5,
    . == "1-3 ganger i måneden" ~ 0.5,
    . == "Sjeldnere" ~ 0.1,
    . == "Aldri" ~ 0,
    T ~ NA_real_
    
  ), .names = "{col}_num")) %>% 
  select(antall_reiser,ID_year, Year, Month_fac,date, BOSTED_KommuneNummer, everything()) 




write_csv2(pf, "NRVU_2016_2022_personfil.csv")




pf0 %>% 
  select(matches("vane.*wgma")) %>% 
  View
  
trd_pers %>%   
select(matches("vane.*wgma")) %>% 
  View


# 2016-2022 NRVU PREP factor ----------------------------------------------------------




df <- df0 %>% 
  mutate(Month_fac = factor(Month, c("Januar",
                                     "Februar",
                                     "Mars",
                                     "April",
                                     "Mai",
                                     "Juni",
                                     "Juli",
                                     "August",
                                     "September",
                                     "Oktober",
                                     "November",
                                     "Desember"
  )),
  fase = factor(fase, c("Pre-pandemic",
                        "Mid-pandemic",
                        "Post-pandemic")
  )) %>% 
  left_join(y = formal_tabell, by = c("formal_hjem_wgma"), keep = T) 




pf <- pf0 %>% 
  mutate(Month_fac = factor(Month, c("Januar",
                                     "Februar",
                                     "Mars",
                                     "April",
                                     "Mai",
                                     "Juni",
                                     "Juli",
                                     "August",
                                     "September",
                                     "Oktober",
                                     "November",
                                     "Desember"
  )),
  fase = factor(fase, c("Pre-pandemic",
                        "Mid-pandemic",
                        "Post-pandemic")
  ))%>% 
  mutate(across(matches("vane_.*wgma$"), ~factor(., 
                                          c("Nesten hver dag, 5-7 ganger i uken",
                                               "3-4 ganger i uken",
                                               "1-2 ganger i uken",
                                               "1-3 ganger i måneden",
                                               "Sjeldnere",
                                               "Aldri"
                                               )))) 

?unite






# SP2023 - person transport implications ----------------------------------

vekt <- read_csv2("NRVU_vekt_pandemi_alder_kjønn.csv")

# WT er nasjonale vekter!

trd_reise <- df %>% 
  # filter(q3rc_Home1_address_Fylke == "Trøndelag") %>% 
  # filter(q3rc_Home1_address_KommuneNr == "Trondheim") 
  filter(BOSTED_KommuneNummer == "Trondheim") %>% 
  left_join(y = vekt, by = c("ID_year", "fase")) %>% 
  mutate(vekt_wgma = ifelse(is.na(vekt_wgma), 1, vekt_wgma),
         fase = factor(fase, c("Pre-pandemic",
                               "Mid-pandemic",
                               "Post-pandemic")))

trd_pers <- pf %>% 
  filter(BOSTED_KommuneNummer == "Trondheim") %>% 
  distinct(ID_year, .keep_all = T) %>% 
  left_join(y = vekt, by = c("ID_year", "fase")) %>% 
  mutate(vekt_wgma = ifelse(is.na(vekt_wgma), 1, vekt_wgma),
         fase = factor(fase, c("Pre-pandemic",
                               "Mid-pandemic",
                               "Post-pandemic")))



## Antall observasjoner ----------------


trd_pers %>% 
  # count(Year_group, Month_fac) %>% 
  count(Year_group, Month_fac, wt = vekt_wgma) %>%
  # summarise(avg = weighted.mean(antall_reiser,vekt_wgma)) %>% 

  write_clip()
  View()
  
  
  
## average antall reiser -------------------

df %>% 
    filter(formal_hjem_wgma != "Hjemreise") %>% 
    group_by(ID_year) %>% 
    add_count(name = "antall_reiser_uten_hjemreise") %>% 
    distinct(ID_year, .keep_all = T) %>%   #fra 464019 til 148461
    filter(formal_hjem_wgma != "Hjemreise") %>% 
    
    group_by(Year_group, Month_fac) %>%
    summarise(avg = mean(antall_reiser_uten_hjemreise)*1.0001) %>%
    # pivot_wider(values_from = avg, names_from = Year_group) %>% 
    write_clip()
  View()  
  

  ## det er noe feil med kodingen av hjemreiser for måned jan-feb-mars
df %>% 
  filter(Year_group == "2018-2019") %>% 
  select(Month_fac, formal_hjem_wgma) %>% 
  # count(Month_fac, formal_hjem_wgma) %>% View
  tbl_summary(
    missing = "no", #ifany
    by = Month_fac,
    type = all_continuous() ~ "categorical", #gjør antall_reiser til categorical.
    statistic = list(
      # all_continuous() ~ "{mean} ({sd})"
      all_categorical() ~ "{p}%"
    ),
    digits = all_categorical() ~ 0,
  )
  
  
  df %>% 
    # count(Year_group, Month_fac) %>% 
    distinct(ID_year, .keep_all = T) %>% 
    group_by(Year_group, Month_fac) %>%
    summarise(avg = mean(antall_reiser)*1.0001) %>%
    # pivot_wider(values_from = avg, names_from = Year_group) %>% 
    # write_clip()
  View()
  
  


# antall 0-reisedager. Denne gir samme resultat som tbl_symmary under.

  
trd_pers %>% 
    count(fase, antall_reiser, wt = vekt_wgma) %>% 
    pivot_wider(names_from = fase, values_from = n) %>% 
    write_clip()
    View


# antall reiser per dag, kategorisk    
  mi <- trd_pers %>% 
      # select(Year_group, Month_fac) %>% 
      filter(!str_detect(Month_fac, "Jan|Feb"),
             antall_reiser <= 8
             ) %>%
      select(fase, antall_reiser, vekt_wgma)
    
    survey::svydesign(ids = ~1, 
                      data =mi,
                      weights = ~vekt_wgma
                      # weights = ~1
    ) %>% 
      tbl_svysummary(
        missing = "no", #ifany
        by = fase,
        type = all_continuous() ~ "categorical", #gjør antall_reiser til categorical.
        include = c(fase, antall_reiser),   # include = c(api00, api99, both),
        statistic = list(
          # all_continuous() ~ "{mean} ({sd})"
          all_categorical() ~ "{p}%"
        ),
        digits = all_continuous() ~ 0,
        
      )

    
# antall reiser kategorisert i grupper.    
    mi <- trd_pers %>% 
      # select(Year_group, Month_fac) %>% 
      filter(!str_detect(Month_fac, "Jan|Feb"),
             antall_reiser <= 8
      ) %>%
      select(fase, antall_reiser_kat4, vekt_wgma)
    
    survey::svydesign(ids = ~1, 
                      data =mi,
                      weights = ~vekt_wgma
                      # weights = ~1
    ) %>% 
      tbl_svysummary(
        missing = "no", #ifany
        by = fase,
        type = all_continuous() ~ "categorical", #gjør antall_reiser til categorical.
        include = c(fase, antall_reiser_kat4),   # include = c(api00, api99, both),
        statistic = list(
          # all_continuous() ~ "{mean} ({sd})"
          all_categorical() ~ "{p}%"
        ),
        digits = all_continuous() ~ 0,
        
      )
    
    pi <- pf %>% 
      # select(Year_group, Month_fac) %>% 
      filter(!str_detect(Month_fac, "Jan|Feb"),
             antall_reiser <= 8
      ) %>%
      select(fase, antall_reiser, antall_reiser_kat4)
    
    survey::svydesign(ids = ~1, 
                      data =pi,
                      # weights = ~vekt_wgma
                      weights = ~1
    ) %>% 
      tbl_svysummary(
        missing = "no", #ifany
        by = fase,
        type = all_continuous() ~ "categorical", #gjør antall_reiser til categorical.
        include = c(fase, antall_reiser),   # include = c(api00, api99, both),
        statistic = list(
          # all_continuous() ~ "{mean} ({sd})"
          all_categorical() ~ "{p}%"
        ),
        digits = all_continuous() ~ 0,
        
      )    
    
# hvem står for økningen i 0-reiser?

    mi <- trd_pers %>% 
      # select(Year_group, Month_fac) %>% 
      # filter(!str_detect(Month_fac, "Jan|Feb")              # 0 reiser
      # ) %>%
      select(fase, alder_kat_wgma_1317, vekt_wgma)
    
    survey::svydesign(ids = ~1, 
                      data =mi,
                      weights = ~vekt_wgma
                      # weights = ~1
    ) %>% 
      tbl_svysummary(
        missing = "no", #ifany
        include = c(fase, alder_kat_wgma_1317),   # include = c(api00, api99, both),
        by = fase,
        type = all_continuous() ~ "categorical", #gjør antall_reiser til categorical.
     
        statistic = list(
          # all_continuous() ~ "{mean} ({sd})"
          all_categorical() ~ "{p}%"
          # all_categorical() ~ "{n}"
        ),
        digits = all_continuous() ~ 0,
        
      )
    
    pi <- pf %>% 
      filter(!str_detect(Month_fac, "Jan|Feb"),              # 0 reiser
              antall_reiser == 0
             ) %>%
      select(fase, alder_kat_wgma_1317)
    
    survey::svydesign(ids = ~1, 
                      data =pi,
                      # weights = ~vekt_wgma
                      weights = ~1
    ) %>% 
      tbl_svysummary(
        missing = "no", #ifany
        include = c(fase, alder_kat_wgma_1317),   # include = c(api00, api99, both),
        by = fase,
        type = all_continuous() ~ "categorical", #gjør antall_reiser til categorical.
        
        statistic = list(
          # all_continuous() ~ "{mean} ({sd})"
          # all_categorical() ~ "{p}%"
          all_categorical() ~ "{n}"
        ),
        digits = all_continuous() ~ 0,
        
      )   
        
                                                          
    

# var måneden jan/feb 2022 veldig forskjellig fra pre-pandemic?
# Hmm. Må sjekke personfil, for reisefilen har kun 0-reisende i 2022, og ingen for de andre årene.
# Konklusjon: vil si jan-feb er en gjennomsnittlig reisemåned i året.

trd_pers %>% 
  # filter(!str_detect(Month_fac, "Jan|Feb")) %>% 
  # group_by(Year_group, Month_fac) %>% 
  group_by(Year_group) %>% 
  summarise(avg = weighted.mean(antall_reiser,vekt_wgma), n = n()) %>%
  # summarise(avg = mean(antall_reiser, na.rm = T), n=n()) %>%
  mutate(avg = avg*1.000001) %>% 
  select(-n) %>%
  # select(-avg) %>% 
  pivot_wider(names_from = Year_group, values_from = avg) %>% 
  write_clip()
  View



trd %>% 
  group_by(fase, Month_fac) %>% 
 
  distinct(ID_year, .keep_all = T) %>% 
   # summarise(avg = weighted.mean(antall_reiser, wt_nat_reg), n=n()) %>%
  summarise(avg = mean(antall_reiser, na.rm = T), n=n()) %>%
  mutate(avg = avg*1.000001) %>% 
  select(-n) %>%
  # select(-avg) %>% 
  pivot_wider(names_from = fase, values_from = avg) %>% 
  write_clip()
View


# MEDIAN
trd %>% 
  group_by(fase, Month_fac) %>% 
  
  distinct(ID_year, .keep_all = T) %>% 
  # summarise(avg = weighted.mean(antall_reiser, wt_nat_reg), n=n()) %>%
  summarise(med = median(antall_reiser, na.rm = T), n=n()) %>%
  mutate(med = med*1.000001) %>% 
  select(-n) %>%
  # select(-med) %>% 
  pivot_wider(names_from = fase, values_from = med) %>% 
  write_clip()
View

## reisekjeder ------------------





## GJOREMAL --------------

#2018/2019: [1] "q38_GJOREMAL_HOVED"       "q38rc_type_gjoremal"      "q38rc_detaljert_gjoremal" "q38rc_type_gjoremal_hjem"
#2020: [1] "GJOREMALc1"       "ENDE_1"           "START_1"          "FORMAL_HOVED_1"   "FORMAL_Confirm_1" "FORMAL_SUB_1"  
#2021: [1] "GJOREMALc1"      "Gjoremal"        "ReisehensiktRVU"



# Alle: formal_hjem_wgma (med hjemreise)

trd_reise %>% 
  count(Year_group, formal_hjem_enkel_wgma,wt= vekt_wgma) %>%
  pivot_wider(names_from = Year_group, values_from = n) %>% 
  # write_clip()
View






# om det fins reisende som ikke har en hjemreise av type ikke-rundtur
trd_reise %>%

  mutate(hjemreise01 = ifelse(formal_hjem_wgma == "Hjemreise", 1,NA)) %>% 
  group_by(ID_year) %>%
  # add_count(name = "check", formal_hjem_wgma == "Hjemreise") %>% 
  add_count(name = "antall_hjemreiser", !is.na(hjemreise01), na.rm = T) %>% 
  mutate(antall_hjemreiser = ifelse(is.na(hjemreise01), NA,antall_hjemreiser )) %>% 

  select(ID_year,  antall_reiser, hjemreise01, antall_hjemreiser, formal_hjem_wgma) %>% 
  

  filter(antall_reiser == 1) %>% 
  View


trd_reise %>% 
  count(Year_group, q45_START)
          
?add_count




# formålsfordeling uten JAN-FEB_MARS og uten hjemreiser
mi <- trd_reise %>% 
  filter(!str_detect(Month_fac, "Jan|Feb|Mars")) %>% 
  filter(formal_hjem_enkel_wgma != "Hjemreise") %>% 
  select(Year_group, formal_hjem_enkel_wgma, vekt_wgma)
# count(fase, formal_hjem_wgma, wt = vekt_wgma) 
# pivot_wider(names_from = fase, values_from = n) %>%
# write_clip()
# View


survey::svydesign(ids = ~1, 
                  data =mi,
                  weights = ~vekt_wgma
                  # weights = ~1
) %>% 
  tbl_svysummary(
    missing = "no", #ifany
    by = Year_group,
    include = c(Year_group, formal_hjem_enkel_wgma),
    # type = all_continuous() ~ "categorical", #gjør antall_reiser til categorical.
    statistic = list(
      # all_continuous() ~ "{mean} ({sd})"
      # all_categorical() ~ "{p}%"
      all_categorical() ~ "{n}"
    ),
    sort = list(everything() ~ "frequency"),
    digits = all_categorical() ~ 0,
  )

?tbl_svysummary


# samme MEN for pi.  formålsfordeling uten JAN-FEB_MARS og uten hjemreiser. 
pi <- df %>% 
  filter(!str_detect(Month_fac, "Jan|Feb|Mars")) %>% 
  filter(formal_hjem_enkel_wgma != "Hjemreise") %>% 
  select(Year_group, formal_hjem_enkel_wgma)
# count(fase, formal_hjem_wgma, wt = vekt_wgma) 
# pivot_wider(names_from = fase, values_from = n) %>%
# write_clip()
# View


survey::svydesign(ids = ~1, 
                  data =pi,
                  # weights = ~vekt_wgma
                  weights = ~1
) %>% 
  tbl_svysummary(
    missing = "no", #ifany
    by = Year_group,
    include = c(Year_group, formal_hjem_enkel_wgma),
    # type = all_continuous() ~ "categorical", #gjør antall_reiser til categorical.
    statistic = list(
      # all_continuous() ~ "{mean} ({sd})"
      all_categorical() ~ "{p}%"
      # all_categorical() ~ "{n}"
    ),
    sort = list(everything() ~ "frequency"),
    digits = all_categorical() ~ 1,
  )



### Gjoremål forenkling - hente tabell -----------------

trd_reise %>% 
  # select(Year, formal_hjem_wgma, matches("gjoremal|formal") & !matches("^q")) %>%
  
  left_join(y = formal_tabell, by = c("formal_hjem_wgma"), keep = T) %>% 
  select(Year, formal_hjem_enkel_wgma, matches("gjoremal|formal") ) %>%
  count(Year, formal_hjem_enkel_wgma) %>% 
  View

formal_tabell <- trd_reise %>% 
  count(formal_hjem_wgma, q38rc_type_gjoremal_hjem) %>% 
  filter(!is.na(q38rc_type_gjoremal_hjem), q38rc_type_gjoremal_hjem != "Annet") %>% 
  mutate(q38rc_type_gjoremal_hjem = ifelse(q38rc_type_gjoremal_hjem == "Til/fra arbeid", "Til/fra arbeid/skole", q38rc_type_gjoremal_hjem),
         q38rc_type_gjoremal_hjem = ifelse(q38rc_type_gjoremal_hjem == "Til/fra skole", "Til/fra arbeid/skole", q38rc_type_gjoremal_hjem)) %>% 
  distinct(formal_hjem_wgma, .keep_all = T) %>% 
  rename(formal_hjem_enkel_wgma = q38rc_type_gjoremal_hjem
  ) %>% 
  select(-n) 

write_csv2(formal_tabell, "NRVU_formal_forenkling.csv")



### q38rc_detaljert_gjoremal: Gym / treningssenter------------------------



### Starttid: Handle/service ----------------

# [1] "Year"                     "q41_STARTTID"             "q41_STARTTID_REK"         "STARTTID_Hidden_1"        "STARTTID_TIMESINTERVALL" 
# [6] "STARTTID_1r1c1"           "STARTTID_1r1c2"           "noanswerSTARTTID_1_r99.1" "hSTARTTID"                "noanswerSTARTTID_1_r99#1"


# mi <- trd_reise %>% 
mi <- df %>% 
  filter(!str_detect(Month_fac, "Jan|Feb|Mars")) %>% 
  filter(formal_hjem_enkel_wgma == "Handle/service") %>%
  select(fase, STARTTID_hour_wgma) 


survey::svydesign(ids = ~1, 
                  data =mi,
                  # weights = ~vekt_wgma
                  weights = ~1
                  ) %>% 
  tbl_svysummary(
    missing = "no", #ifany
    by = fase,
    include = c(fase, STARTTID_hour_wgma),
    type = all_continuous() ~ "categorical", #gjør antall_reiser til categorical.
    statistic = list(
      # all_continuous() ~ "{mean} ({sd})"
      all_categorical() ~ "{p}%"
      # all_categorical() ~ "{n}"
    ),
    digits = all_categorical() ~ 0,
  )





## Kode for starttid-intervall.

trd_reise %>% 
  filter(formal_hjem_enkel_wgma == "Handle/service") %>%
  select(Year, formal_hjem_enkel_wgma, matches("starttid")) %>% 
  unite(col = "starttid_wgma", c(q41_STARTTID, STARTTID_Hidden_1), na.rm = T) %>% 
  mutate(starttid_wgma = case_when(
    str_detect(starttid_wgma, "Vet ikke|99") ~ NA_character_,
    T ~ starttid_wgma
    
  )) %>% 
  mutate(starttid_wgma_date = strptime(starttid_wgma, "%H:%M")) %>%
  mutate(STARTTID_hour = as.numeric(substr(starttid_wgma, start = 1, stop = 2)),
         STARTTID_hour = ifelse(is.na(STARTTID_hour), STARTTID_1r1c1, STARTTID_hour),

         STARTTID_minute = as.numeric(substr(starttid_wgma, start = 4, stop = 5)),
         STARTTID_minute= ifelse(is.na(STARTTID_minute), as.numeric(STARTTID_1r1c2), STARTTID_minute),
         starttid_tot_minutes = STARTTID_hour*60 + STARTTID_minute
  ) %>% 
  mutate(starttid_intervall = case_when(
    starttid_tot_minutes<361~"00:00 - 06:00",
    starttid_tot_minutes<541~"06:01 - 09:00",
    starttid_tot_minutes<721~"09:01 - 12:00",
    starttid_tot_minutes<901~"12:01 - 15:00",
    starttid_tot_minutes<1021~"15:01 - 17:00",
    starttid_tot_minutes<1201~"17:01 - 20:00",
    starttid_tot_minutes<1441~"20:01 - 23:59",
    T ~ NA_character_
  )) %>% 
  select(Year, formal_hjem_enkel_wgma, starttid_wgma,starttid_intervall, STARTTID_hour, STARTTID_minute,everything()) %>% 
  View

trd_reise %>% 
select()
  View


## HTRM -------------



# reisemiddel
#2018: [1] "HTRM"      "HTRM_REK"   "HTRM_kollektiv"   "HTRM_uten_fly"     "HTRM_boat"     "HTRM_uten_flydrosje"
#2019: [1] "HTRM"    "HTRM_uten_flydrosje"  "HTRM_kollektiv"       "HTRM_REK"             "HTRM_uten_fly"        "HTRM_uten_fly_enkelt"  
#2020: [1] "HTRM"   "HTRM_REK"    "HTRM_uten_fly"   "HTRM_uten_flydrosje"  "HTRM_uten_fly_enkelt" "HTRM_kollektiv" 
#2021: [1] "HTRM"       "HTRM_REK"            "HTRM_uten_flydrosje" "HTRM_uten_fly"       "HTRM_kollektiv"   

# HTRM_koll_detalj = HTRM men med detaljene til HTRM_kollektiv  

#først bare HTRM.  

mi <- trd_reise %>% 
  filter(!str_detect(Month_fac, "Jan|Feb|Mars")) %>%
  filter(formal_hjem_enkel_wgma != "Hjemreise") %>% 
  select(fase, Month_fac, HTRM, vekt_wgma)
  
  # count(fase, HTRM, wt = vekt_wgma) 
  # View


  survey::svydesign(ids = ~1, 
                    data =mi,
                    weights = ~vekt_wgma
                    # weights = ~1
  ) %>% 
  tbl_svysummary(
    missing = "no", #ifany
    by = fase,
    include = c(fase, HTRM),
    # include = c(Month_fac, HTRM),
    # type = all_continuous() ~ "categorical", #gjør antall_reiser til categorical.
    statistic = list(
      # all_continuous() ~ "{mean} ({sd})"
      all_categorical() ~ "{p}%"
      # all_categorical() ~ "{n}"
    ),
    digits = all_categorical() ~ 0,
    sort = list(everything() ~ "frequency")
  )
  
  

### El-sykkel --------

    
  q58_1_sykkel
  
  
### Flyreiser -------------------
  

trd_reise %>% 
    filter(HTRM == "Fly") %>% 
    count(Year, HTRM)
  
  
q45_STart  
q50_Ende  
    
trd_reise %>% 
  select(Year, q45_START, q50_ENDE, End_Kommunenr_utland, ENDE_1) %>% 
  View


## VAner ----------------------

pf %>% 
  select(matches("_num$")) %>% 
  View

#  [1] "q83_VANE_BILFORER" "q84_VANE_BILPASS"  "q85_VANE_KOLL"     "q86_VANE_SYKKEL"   "q87_VANE_FOTS"     "VANE_BILFORER"    
#  [7] "VANE_BILPASS"      "VANE_KOLL"         "VANE_SYKKEL"       "VANE_FOTS" 

# unite: [1] "vane_bilforer_wgma" "vane_bilpass_wgma"  "vane_koll_wgma"     "vane_sykkel_wgma"   "vane_fots_wgma" 

trd_pers %>% 
  select(fase,matches("VANE.*wgma"), vekt_wgma) %>%
  pivot_longer(!c(fase, vekt_wgma), names_to = "mode", values_to = "frek") %>% 
  count(fase, mode, frek, wt = vekt_wgma) %>% 
  mutate(n = round(n,0)) %>% 
  pivot_wider(names_from = frek, values_from = n) %>% 
  write_clip()
  View

  
  
  
  trd_pers %>% 
    select(fase,matches("vane.*wgma_num"), vekt_wgma) %>% 
    pivot_longer(!c(fase, vekt_wgma), names_to = "mode", values_to = "num") %>% 
    group_by(fase, mode) %>% 
    
    # summarise(avg = mean(num, na.rm = T)) %>%
    summarise(sd = sd(num, na.rm=T)) %>% 
    
    # mutate(avg = avg*1.000001) %>% 
    # pivot_wider(names_from = fase, values_from = avg) %>%
    pivot_wider(names_from = fase, values_from = sd) %>% 
    
    write_clip()
  View 
  
# quantile(trd_pers$vane_bilforer_wgma_num, probs = seq(0,1,0.1), na.rm = T)  

  
  mi <- trd_pers %>% 
    # select(Year_group, Month_fac) %>% 
    # filter(!str_detect(Month_fac, "Jan|Feb")              # 0 reiser
    # ) %>%
    select(fase, matches("vane.*wgma"), vekt_wgma)
  
  survey::svydesign(ids = ~1, 
                    data =mi,
                    weights = ~vekt_wgma
                    # weights = ~1
  ) %>% 
    tbl_svysummary(
      missing = "no", #ifany
      include = c(fase, vane_bilforer_wgma, vane_bilpass_wgma, vane_koll_wgma, vane_sykkel_wgma, vane_fots_wgma),   # include = c(api00, api99, both),
      # include = c(!vekt_wgma),
      by = fase,
      # type = all_continuous() ~ "categorical", #gjør antall_reiser til categorical.
      
      statistic = list(
        all_continuous() ~ "{mean} ({sd})"
        all_categorical() ~ "{p}%"
        # all_categorical() ~ "{n}"
      ),
      digits = all_continuous() ~ 0,
      sort = list(everything() ~ "frequency")
    )



## Rette opp 1-reiser i 2022 --------------------------







## tbl_summary ----------------



trd %>% 
  tbl_svysummary(
    missing = "no",   # to include counts of NA or not
    type = all_categorical() ~ "categorical",  # denne linja hjalp!
    # by = likert,
    include = list(Kjonn, alder_kat_wgma),
    statistic = list(all_categorical() ~"{p}%"), #{n} {p}%
    digits = list(all_continuous() ~ 0,
                  all_categorical()~ 0),
    percent = "row"
  )    



   

mi <- trd_pers %>% 
  # select(Year, Kjonn, alder_kat_wgma, wt_nat_reg) 
  # select(Year_group, Month_fac) %>% 
  filter(!str_detect(Month_fac, "Jan|Feb")) %>%
  # select(fase, Month_fac, wt_nat_reg) 
  select(fase, antall_reiser, vekt_wgma)

  survey::svydesign(ids = ~1, 
                    data =mi,
                    weights = ~vekt_wgma
                    # weights = ~1
  ) %>% 
  tbl_svysummary(
    missing = "no", #ifany
    by = fase,
    type = all_continuous() ~ "categorical", # få se om denne kan gjøre ant_
    include = c(fase, antall_reiser),   # include = c(api00, api99, both),
    statistic = list(
      # all_continuous() ~ "{mean} ({sd})"
      # all_categorical() ~ "{p}%"
      ),
    digits = all_continuous() ~ 0,
    
    )






## Lage vekt, Trondheim 2016-2022. --------------------------

  #Likevekt med hensyn på variabel: fase, alder_kat_wgma, kjønn


  # med hensyn til alder og kjønn
  age_ssb <- c(
    "0.0347184528476369",
    "0.19",
    "0.22",
    "0.145462678165772",
    "0.132877992883421",
    "0.133868081941178",
    "0.0697987656554691",
    "0.0736334760669843") %>% 
    as.numeric()
  
  
  
  # setting up empty dataframes/tibbles
  n <- 35 # iterasjoner
  # k <- "Pre-pandemic"
  k <- "Mid-pandemic"
  # k <- "Post-pandemic"
  
trd_pers_k <- trd_pers %>% 
  filter(fase == k) %>% 
  mutate(vekt_wgma,
    age_weights = 1,
         gender_weights = 1)
  
  age0 <- trd_pers_k %>% 
    filter(fase == k) %>% 
    count(alder_kat_wgma, wt = vekt_wgma) %>%
    filter(!is.na(alder_kat_wgma)) %>% 
    mutate(perc = n/sum(n))
  
  gend0 <- trd_pers_k %>% 
    filter(fase == k) %>% 
    count(Kjonn, wt = vekt_wgma) %>%
    filter(!str_detect(Kjonn, "oppgi|Annet")) %>% 
    mutate(perc = n/sum(n)) 
  

  
  df_age_weights <- data.frame(matrix(nrow = 8, ncol = n)) %>% 
    tibble()
  df_age_weights[,1] <- age0$alder_kat_wgma 
  
  df_gender_w <- data.frame(matrix(nrow = 2, ncol = n)) %>% 
    tibble()
  df_gender_w[,1] <- gend0$Kjonn 
  
  trd_pers_vekt <- trd_pers_k %>% 
    filter(fase == k) %>% 
    select(vekt_wgma)
  
  # vi prøver på en for-loop
  
  for (i in 1:n) {
    
    # må hente ut ny fordeling. Lagre ny fordeling  
    age_w_i <- trd_pers_k %>% 
      filter(fase == k) %>% 
      count(alder_kat_wgma, wt = vekt_wgma) %>% #vekt = age_weight*gender_weight
      filter(!is.na(alder_kat_wgma)) %>% 
      mutate(perc = n/sum(n)) %>% 
      add_column(age_ssb) %>% 
      mutate(age_weights = age_ssb/perc) %>% 
      select(-c(n, age_ssb, perc)) # age_kat, age_weights
    
    
    df_age_weights[,1+i] <- age_w_i$age_weights
    
    
    # now for gender_weight
    gender_w_i <- trd_pers_k %>% 
      filter(fase == k) %>% 
      count(Kjonn, wt = vekt_wgma) %>% #vekt_wgma = age_weight*gender_weight
      filter(!str_detect(Kjonn, "oppgi|Annet")) %>% 
      mutate(perc = n/sum(n)) %>% 
      add_column(gender50 = c(0.5,0.5)) %>% 
      mutate(gender_weights = gender50/perc) %>% 
      select(-c(n, gender50,perc)) # age_kat, age_weights
    
    df_gender_w[,1+i] <- gender_w_i$gender_weights
    
    
    #update trd_pers$vekt_wgma with newest weights  
    
    trd_pers_k <- trd_pers_k %>% 
      filter(fase == k) %>% 
      select(-c(age_weights, gender_weights)) %>% 
      left_join(y = age_w_i, by = "alder_kat_wgma") %>% 
      left_join(y = gender_w_i,by = "Kjonn") %>% 
      mutate(vekt_wgma = (age_weights*0.8 + gender_weights*0.2)) %>% 
      mutate(vekt_wgma = ifelse(is.na(vekt_wgma), 1, vekt_wgma))
    
    trd_pers_vekt[,1+i] <- trd_pers_k$vekt_wgma
    
  }
  

  # summmerer vektene. Se om de holder seg ish rundt antall observasjoner i datasettet.  
  
  trd_pers_vekt %>% 
    colSums(., na.rm = T) %>% 
    tibble() %>% 
    View

  
k  

vekt_postpandemic <- trd_pers_k %>% 
    select(ID_year, vekt_wgma, fase)
      
vekt_midpandemic <- trd_pers_k %>% 
  select(ID_year, vekt_wgma, fase)
  
vekt <- vekt_midpandemic %>% 
  bind_rows(vekt_postpandemic)

write.csv2(vekt, "NRVU_vekt_pandemi_alder_kjønn.csv")





  
# teste vekt
  
  trd_pers %>% 
    count(fase, Kjonn, alder_kat_wgma, wt = vekt_wgma) %>% 
    pivot_wider(values_from = n, names_from = Kjonn) %>% 
    # write_clip()
  View
  
  trd_pers %>% 
    filter(is.na(alder_kat_wgma)) %>% 
    View

  
 test <-  trd_pers %>% 
    # count(Year, antall_reiser) %>% 
    select(fase, Kjonn, alder_kat_wgma, vekt_wgma)
 
 survey::svydesign(ids = ~1, 
                   data =test,
                   weights = ~vekt_wgma
                   # weights = ~1
 ) %>% 
    tbl_svysummary(
      missing = "no",   # to include counts of NA or not
      type = all_categorical() ~ "categorical",  # denne linja hjalp!
      by = fase,
      # include = list(Kjonn, alder_kat_wgma),
      statistic = list(all_categorical() ~"{p}%"), #{n} {p}%
      digits = list(all_continuous() ~ 0,
                    all_categorical()~ 0)
      # percent = "row"
      
    )
  
  

 
 

# antall_reiser -----------------------------------------------------------


p18 %>% 
  count(Antall_Daglige_Reiser) %>% 
  # arrange(-n) %>% 
  View

# vurdere å lage undersøkelsen for 10 reiser. 99% av utvalget har 9 eller færre reiser. MEN hva med de i kommunen...har de mange?
quantile(p18$Antall_Daglige_Reiser, probs = seq(0, 1, 0.01), na.rm = T)





# hytter (Harald) ------------------------------------------------------------------

d19_0 %>% 
  count(Year)

d19_0 %>% 
  count(q44_FORMAL_SUB) %>% 
  View

hytte <- d19_0 %>% 
  filter(str_detect(q44_FORMAL_SUB, "hytte")) 

hyttedags <- hytte %>% 
  filter(str_detect(q79_FLERE_Confirm, ""))


hytte %>%   
  select(1:5, q44_FORMAL_SUB, matches("TID|Reise"), q60_1_BIL_SJAFOR, q62_1_TRANSPORTMIDDEL_P, q73_1_REISE_VIDERE) %>% 
  View

hytte %>% 
  names()

hytte %>% 
  select(matches("HTRM$|q45rc|q50|q79|_gruppert")) %>% 
  View

hytte %>% 
  select(matches("reiseav")) %>% 
  View


hytte %>% 
  count(q79_FLERE_Confirm, reiseavstKM_gruppert) %>% 
  pivot_wider(names_from = reiseavstKM_gruppert, values_from = n) %>% 
  write_clip()








# BREEAM- PP9 (Lysaker) -------------------------------------------------------------


# ser på arbeidsreisene til de med arbeidsplass i Lysaker
# [1] "q25rc_Work_address_GRUNNKRETS_agg" "q25rc_Work_address_KommuneNr" 

# [1] "q38_GJOREMAL_HOVED"       "q38rc_type_gjoremal"      "q38rc_detaljert_gjoremal" "q38rc_type_gjoremal_hjem"

df %>% 
  select(matches("gjoremal")) %>% 
  names()


# sjekke grunnkretsnummer i Bærum...
df %>% 
  filter(q25rc_Work_address_KommuneNr == "Bærum") %>%
  count(q25rc_Work_address_GRUNNKRETS_agg) %>% 
  View


df_pp9 <- df %>% 
  mutate(
    sesong = case_when(
      is.na(Month) ~ Month,
      str_detect(Month, "April|Mai|Ju|Aug|Sept") ~ "Sommer",
      T~ "Vinter"
    )) %>% 
  mutate(HTRM_REK_fac = factor(HTRM_REK, c("Til fots",
                                           "Sykkel",
                                           "Kollektivt",
                                           "Bil, som fører",
                                           "Bil, som passasjer",
                                           "Annet"
  ))) 

df_pp9 %>% 
  # filter(q25rc_Work_address_KommuneNr == "Bærum") %>% 
    filter(q38rc_type_gjoremal == "Til/fra arbeid") %>% 
  
  # filter(str_detect(q25rc_Work_address_GRUNNKRETS_agg, "^21907")) %>% #lysaker
  
  # filter(str_detect(q25rc_Work_address_GRUNNKRETS_agg, "^21907")) %>% #lysaker uten 01 og 02
  # filter(!q25rc_Work_address_GRUNNKRETS_agg %in% c("2190701", "2190702")) %>% 
  
  # filter(str_detect(q25rc_Work_address_GRUNNKRETS_agg, "^21910")) %>% #høvik
  
  # filter(str_detect(q25rc_Work_address_GRUNNKRETS_agg, "^21909")) %>% #stabekk
  
  # filter(str_detect(q25rc_Work_address_GRUNNKRETS_agg, "^21911")) %>% #LØKEBERG-BLOMMENHOLMEN

  
  filter(str_detect(q25rc_Work_address_GRUNNKRETS_agg, "^21907|^21910|^21909|^21911")) %>% # alle områdene
  filter(!q25rc_Work_address_GRUNNKRETS_agg %in% c("2190701", "2190702")) %>%
  count(HTRM_REK_fac, sesong) %>% 
  pivot_wider(names_from = sesong, values_from = n) %>% 
  
  write_clip()

  


# henter ut TRM for asker og bærum...

df_pp9 %>% 
  
  # filter(REK_YRKESTATUS == "Yrkessaktiv") %>% 
  
  filter(str_detect(q25rc_Work_address_KommuneNr, "Bærum|Asker")) %>%
  filter(str_detect(q38rc_type_gjoremal, "Til/fra arbeid")) %>% 
  
  count(HTRM_REK_fac, sesong) %>% 
  pivot_wider(names_from = sesong, values_from = n) %>% 
  write_clip()

  View()



# nord-norge, lange reiser > 100 km ---------------------------------------


# per 2019
# Nordland. kommunene starter med 18
# troms og finnmark. starter med 19 og 20

# per etter sammenslåing i 2020.
# Nordland. kommunene starter med 18
# Troms og finnmark starter med 54
# 



# kommune <- read_excel("~/0 SSB/kommunenavn_2019.xlsx", 
#                                sheet = "kommunenavn") %>% 
#   mutate(kommuneNR = as.character(kommuneNR))
# 
# kommune_nord <- kommune %>% 
#   filter(str_detect(kommuneNR, "^18|^19|^20"))


# fylkesnummer og navn
fylke <- bind_cols(fylkeNR = c(1,
                     2,
                     3,
                     4,
                     5,
                     6,
                     7,
                     8,
                     9,
                     10,
                     11,
                     12,
                     13,
                     14,
                     15,
                     16,
                     17,
                     18,
                     19,
                     20,
                     21,
                     22,
                     50
), fylke = c("Østfold",
     "Akershus",
     "Oslo",
     "Hedmark",
     "Oppland",
     "Buskerud",
     "Vestfold",
     "Telemark",
     "Aust-Agder",
     "Vest-Agder",
     "Rogaland",
     "Hordaland",
     "Bergen",
     "Sogn og Fjordane",
     "Møre og Romsdal",
     "Sør-Trøndelag",
     "Nord-Trøndelag",
     "Nordland",
     "Troms",
     "Finnmark",
     "Svalbard",
     "Jan Mayen",
     "Trøndelag"
), landsdel = c("Østlandet",
                "Østlandet",
                "Østlandet",
                "Østlandet",
                "Østlandet",
                "Østlandet",
                "Østlandet",
                "Østlandet",
                "Sørlandet",
                "Sørlandet",
                "Vestlandet",
                "Vestlandet",
                "Vestlandet",
                "Vestlandet",
                "Vestlandet",
                "Trøndelag",
                "Trøndelag",
                "Nord-Norge",
                "Nord-Norge",
                "Nord-Norge",
                "øy",
                "øy",
                "Trøndelag"
))


d19 <- d19_0 %>% 
  mutate(start_fylkesnummer = substr(q45rc_Start_address_GRUNNKRETS_agg, 1,2),
         ende_fylkesnummer = substr(q50rc_End_address_GRUNNKRETS_agg, 1, 2),
         
         across(matches("fylkesnummer"), ~ as.numeric(.), .names = "{col}_num")
         ) %>% 
  left_join(fylke, by = c("ende_fylkesnummer_num" = "fylkeNR" )) %>%  # viktig med rett rekkefølge på variablene som skal bindes
  rename(ende_fylkesnavn = fylke,
         ende_landsdel = landsdel) %>% 
  left_join(fylke, by = c("start_fylkesnummer_num" = "fylkeNR")) %>% 
  rename(start_fylkesnavn = fylke,
         start_landsdel = landsdel) %>% 
  
  mutate(HTRM_kollektiv_fylt = case_when(
    
    is.na(HTRM_kollektiv) ~ HTRM,
    T ~ HTRM_kollektiv
  ),
  HTRM_kat4 = case_when(
    str_detect(HTRM_kollektiv_fylt, "Buss|Turbuss") ~ "Buss",
    str_detect(HTRM_kollektiv_fylt, "fly") ~ "Fly",
    str_detect(HTRM_kollektiv_fylt, "Tog") ~ "Tog",
    str_detect(HTRM_kollektiv_fylt, "Bil,") ~ "Bil",
    T ~ NA_character_
  ))





# først reisene FRA Nord-Norge. OVER 100 KM.  start_fylkesnummer > 17 & start_fylkesnummer < 21
# Vi vil ha HTRM: fly, tog, buss, bil
# Fra 18,19,20.
  
d19 %>% 
  select(HTRM, ReiseavstandKM) %>%
  arrange(-(ReiseavstandKM)) %>% 
  slice(1:20) %>% 
  View



d19 %>% 
  filter(str_detect(start_fylkesnummer, "18|19|20") | str_detect(ende_fylkesnummer, "18|19|20")) %>% 
  filter(ReiseavstandKM >= 100) %>%
  count(date) %>% 
  arrange(-n) %>% 
  View
  
  distinct(ID_NUM) %>% 
  count()



# FRA
d19 %>%

  filter(str_detect(start_fylkesnummer, "18|19|20")) %>% 
  
  filter(ReiseavstandKM >= 100) %>%
  filter(ReiseavstandKM >=70 & ReiseavstandKM < 100) %>%  # filtrert på reiseavstand
  
  
  # count(HTRM_kollektiv_fylt) %>%
  # count(HTRM_kat4) %>%¨
  count(HTRM_kat4, ende_fylkesnavn) %>% 
  pivot_wider(names_from = ende_fylkesnavn, values_from = n) %>% 
  write_clip()
  View
  
  
  d19 %>% 
    filter(str_detect(start_fylkesnummer, "18|19|20")) %>% 
    
    # filter(ReiseavstandKM >= 100) %>%
    # filter(ReiseavstandKM >=70 & ReiseavstandKM < 100) %>%  # filtrert på reiseavstand
    
    count(HTRM_kat4, ende_landsdel) %>% 
    pivot_wider(names_from = ende_landsdel, values_from = n) %>% 
    write_clip()
  
  
  # REISER TIL nord-norge. 
  
  d19 %>%
    filter(str_detect(ende_fylkesnummer, "18|19|20")) %>% 
    
    # filter(ReiseavstandKM >= 100) %>%
    filter(ReiseavstandKM >=70 & ReiseavstandKM < 100) %>%  # filtrert på reiseavstand
    

    count(HTRM_kollektiv_fylt) %>%
    # count(HTRM_kat4) %>%
    
    # count(HTRM_kat4, start_fylkesnavn) %>%
    # pivot_wider(names_from = start_fylkesnavn, values_from = n) %>%
    
    write_clip()
  
  
  d19 %>%
    filter(str_detect(ende_fylkesnummer, "18|19|20")) %>% 
    
    filter(ReiseavstandKM >= 100) %>%
    # filter(ReiseavstandKM >=70 & ReiseavstandKM < 100) %>%  # filtrert på reiseavstand

    count(HTRM_kat4, start_landsdel) %>%
    pivot_wider(names_from = start_landsdel, values_from = n) %>%
    
    write_clip()
  
  
  
  
  # (VEKTET) nord-norge, lange reiser > 100 km ---------------------------------------
  
  d19 %>% 
    filter(str_detect(start_fylkesnummer, "18|19|20")) %>% 
    
    filter(ReiseavstandKM >= 100) %>%
    # filter(ReiseavstandKM >=70 & ReiseavstandKM < 100) %>%  # filtrert på reiseavstand
    
    count(HTRM_kat4, ende_landsdel, wt = Vekt_regional) %>% 
    mutate(n = round(n,0)) %>% 
    pivot_wider(names_from = ende_landsdel, values_from = n) %>% 
    write_clip()

  
  d19 %>%
    filter(str_detect(ende_fylkesnummer, "18|19|20")) %>% 
    
    # filter(ReiseavstandKM >= 100) %>%
    filter(ReiseavstandKM >=70 & ReiseavstandKM < 100) %>%  # filtrert på reiseavstand
    
    count(HTRM_kat4, start_landsdel, wt = Vekt_regional) %>%
    mutate(n = round(n,0)) %>% 
    pivot_wider(names_from = start_landsdel, values_from = n) %>%
    
    write_clip()
  
  
  
  # National. (VEKTET) nord-norge, lange reiser > 100 km ---------------------------------------
  
  d19 %>% 
    count(Dataset) %>% 
    View
  
  d19 %>% 
    filter(Dataset == "RVU National 2019") %>% 
    filter(str_detect(ende_fylkesnummer, "18|19|20")) %>% 
    
    filter(ReiseavstandKM >= 100) %>%
    # filter(ReiseavstandKM >=70 & ReiseavstandKM < 100) %>%  # filtrert på reiseavstand
    
    count(HTRM_kat4, start_landsdel) %>%
    pivot_wider(names_from = start_landsdel, values_from = n) %>%
    
    write_clip()

# nord-norge, få med de som ikke har reist --------------------------------

  
se <- read.csv2("RVU 2016-2019 Daglige reiser.csv")  
  
  # nope. kun reisende respondenter er med. Vi får heller anta at utvalget er perfekt representert
  
  
  
  
  

# HTRM sjekk --------------------------------------------------------------

d19_0 %>% 
    count(HTRM) 

  # HTRM                                                               n
  #                                                         
  # 1 Annet                                                            811
  # 2 Bil, som fører                                                 73008
  # 3 Bil, som passasjer                                             14321
  # 4 Husker ikke                                                      209
  # 5 Kollektivtransport (buss, tog, trikk, t-bane, fly, ferje, båt) 15772
  # 6 Moped                                                            352
  # 7 Motorsykkel                                                      443
  # 8 Sykkel                                                          6820
  # 9 Til fots                                                       27040 

  
  d19_0 %>% 
    count(HTRM_REK) 
  
  # HTRM_REK               n
  # 
  # 1 Annet               1815
  # 2 Bil, som fører     73008
  # 3 Bil, som passasjer 14321
  # 4 Kollektivt         15772
  # 5 Sykkel              6820
  # 6 Til fots           27040
  
  d19_0 %>% 
    count(HTRM_uten_fly)
  
  # HTRM_uten_fly                                                 n
  # 
  # 1 Annet                                                       811
  # 2 Bil, som fører                                            73008
  # 3 Bil, som passasjer                                        14321
  # 4 Fly                                                         445
  # 5 Husker ikke                                                 209
  # 6 Kollektivtransport (buss, tog, trikk, t-bane, ferje, båt) 15327
  # 7 Moped                                                       352
  # 8 Motorsykkel                                                 443
  # 9 Sykkel                                                     6820
  # 10 Til fots                                                  27040
  
  d19_0 %>% 
    count(HTRM_kollektiv)
  # HTRM_kollektiv                              n
  #
  # 1 Buss / Skolebuss / Ekspressbuss i rute   8958
  # 2 Charterfly                                 18
  # 3 Drosje / Taxi                             576
  # 4 Ferge (som bilfører/bilpassasjer)         152
  # 5 Ferge (som fotgjenger/busspassasjer)      134
  # 6 Rutebåt                                   114
  # 7 Rutefly                                   427
  # 8 T-bane / Metro                           1917
  # 9 Tog                                      2139
  # 10 Trikk / Bybane                           1227
  # 11 Turbuss / Chartret buss                   101
  # 12 Vet ikke / husker ikke                      9
  # 13 NA                                     123004
  
  
  d19_0 %>% 
    mutate(HTRM_kollektiv_fylt = case_when(
      
      is.na(HTRM_kollektiv) ~ HTRM,
      T ~ HTRM_kollektiv
    )) %>% 
    count(HTRM_kollektiv_fylt)
  
  # HTRM_kollektiv_fylt                        n
  # 
  # 1 Annet                                    811
  # 2 Bil, som fører                         73008
  # 3 Bil, som passasjer                     14321
  # 4 Buss / Skolebuss / Ekspressbuss i rute  8958
  # 5 Charterfly                                18
  # 6 Drosje / Taxi                            576
  # 7 Ferge (som bilfører/bilpassasjer)        152
  # 8 Ferge (som fotgjenger/busspassasjer)     134
  # 9 Husker ikke                              209
  # 10 Moped                                    352
  # 11 Motorsykkel                              443
  # 12 Rutebåt                                  114
  # 13 Rutefly                                  427
  # 14 Sykkel                                  6820
  # 15 T-bane / Metro                          1917
  # 16 Til fots                               27040
  # 17 Tog                                     2139
  # 18 Trikk / Bybane                          1227
  # 19 Turbuss / Chartret buss                  101
  # 20 Vet ikke / husker ikke                     9
  
  
  

# rvu_vestfoldbyene -------------------------------------------------------

d19 <- d19_0
  
  d19 %>% 
    count(Dataset) %>% 
    View

  d19 %>% 
    select(Year, Dataset) %>% 
    distinct(Year, Dataset) %>% 
    View
  

  

# Tønsberg ----------------------------------------------------------------

  vekt_tbg_arbeid <- bind_cols(Month = c("Januar",
                                  "Februar",
                                  "Mars",
                                  "April",
                                  "Mai",
                                  "Juni",
                                  "Juli",
                                  "August",
                                  "September",
                                  "Oktober",
                                  "November",
                                  "Desember"
  ), vekt_19 = c(0.85506694918146,
                 0.693316727219348,
                 1.28500227630471,
                 1.45712616129879,
                 0.689851370692502,
                 1.4272881174738,
                 1.15983783084266,
                 2.16233011608989,
                 0.994607674268011,
                 1.22752572515867,
                 0.676657492018056,
                 1.11459277263527
  ), vekt_18 = c(0.687578826490439,
                 1.03025569745679,
                 1.26162690111826,
                 1.05556534184741,
                 3.20345700759661,
                 3.32599361444457,
                 8.18661235274689,
                 3.21318213512422,
                 2.45448325757695,
                 0.644942671552822,
                 0.477294486709767,
                 0.461387835988739
  ) 
  )
  
  # alle arbeidsreiser NRVU. Se fordelingen over året per måned.
  
 d19 %>% 
    filter(REK_YRKESTATUS == "Yrkessaktiv") %>% 
    filter(q38rc_type_gjoremal == "Til/fra arbeid") %>% 
    count(Month) %>% 
    write_clip()
    View
  
  
    
    
    
    
    
  ## TRM-fordeling på arbeidsreiser -----
  
  # d19
  # Month         n
  # <chr>     <int>
  #   1 April       154
  # 2 August      159
  # 3 Desember    148
  # 4 Februar     224
  # 5 Januar      300
  # 6 Juli        131
  # 7 Juni        173
  # 8 Mai         252
  # 9 Mars        231
  # 10 November    257
  # 11 Oktober     155
  # 12 September   170  

  #  477 arbeidsreiser i Tbg i 2018.
  # 428 arbeidsreiser  i Tbg i 2019.
  
  d18_0 %>%
  # d19_0 %>%
    filter(q3rc_Home1_address_KommuneNr == "Tønsberg") %>% 
    filter(REK_YRKESTATUS == "Yrkessaktiv") %>% 
    filter(q38rc_type_gjoremal == "Til/fra arbeid") %>% 
    count(Month) %>% 
    write_clip()
 
  

d19 %>%
  left_join(vekt_tbg_arbeid, by = c("Month" = "Month")) %>% 
    filter(q3rc_Home1_address_KommuneNr == "Tønsberg") %>% 
    filter(REK_YRKESTATUS == "Yrkessaktiv") %>% 
    filter(q38rc_type_gjoremal == "Til/fra arbeid") %>% 
    count(HTRM_REK, wt = vekt_19) %>% 
  mutate(n = round(n,0)) %>% 
    write_clip()
    View
  
    d18 %>%
      left_join(vekt_tbg_arbeid, by = c("Month" = "Month")) %>% 
      filter(q3rc_Home1_address_KommuneNr == "Tønsberg") %>% 
      filter(REK_YRKESTATUS == "Yrkessaktiv") %>% 
      filter(q38rc_type_gjoremal == "Til/fra arbeid") %>% 
      count(HTRM_REK, wt = vekt_18) %>% 
      mutate(n = round(n,0)) %>% 
      write_clip()
    View
    
    
    
  
 d19_0 %>% 
   count(q38rc_type_gjoremal)
  
 # q38rc_type_gjoremal      n
 # <chr>                <int>
 #   1 Annet                 2477
 # 2 Besøk                14030
 # 3 Fritid               23782
 # 4 Handle/service       38003
 # 5 Omsorgs-/følgereise  13602
 # 6 Organisert aktivitet  7831
 # 7 Til/fra arbeid       29467
 # 8 Til/fra skole         5501
 # 9 Tjeneste              4083
    
 
 ## tilgang til bil ----
 
 
p18_0 %>% 
   filter(q3rc_Home1_address_KommuneNr == "Tønsberg") %>% 
   filter(REK_YRKESTATUS == "Yrkessaktiv") %>% 
   # count(q16_BIL_ANTALL)
   # count(Antall_Biler) %>% 
   select(q16_BIL_ANTALL, matches("BIL_ENERGI")) %>% 
   View
   write_clip()

 
 
 
 
 
 
 

# NARVIK i nrvu?------------------------------------------------------------------

  
  setwd("~/Lokal_NRVU")
  
  Sys.setlocale(category = "LC_ALL", locale = "Norwegian.UTF-8")
  d19_0 <- read_csv2("24.08.2020.RVU 2019 Daglige reiser_Anonymisert_Vektet.csv")  #check.names = F
  d16_0 <- read.csv2("RVU 2016-2019 Daglige reiser.csv")
  
  d19 <- d19_0 

  d19 %>% 
    count(q3rc_Home1_address_KommuneNr) %>% 
    View
  
  
  d16 %>% 
    count(q3rc_Home1_address_KommuneNr, Year) %>% 
    View
  
  

# bærum & asker. bærumsrapport --------------------------------------------

  
d19_0 %>% 
    count(REK_YRKESTATUS)
  
  d19_0 %>% 
    filter(REK_YRKESTATUS == "Yrkessaktiv") %>% 
    filter(str_detect(q3rc_Home1_address_KommuneNr, "Bærum|Asker")) %>% 
    # count(q3rc_Home1_address_KommuneNr) %>% 
    mutate(formaal_bruk = case_when(
      q38rc_detaljert_gjoremal == "Gikk/jogget/skitur" ~ "Rundturer",
      q38rc_detaljert_gjoremal == "Luftet hund" ~ "Rundturer",
      q38rc_detaljert_gjoremal == "Sykkeltur" ~ "Rundturer",
      str_detect(q38rc_detaljert_gjoremal, "hytte|overnatting") ~ "midlt overnatting",
      T ~ q38rc_type_gjoremal
    )) %>% 
    count(formaal_bruk) %>% 
    write_clip()
    View
  
  
 d19_0 %>% 
   count(q38rc_detaljert_gjoremal) %>% 
   View
 
 
 
 d18_0 %>% 
   filter(REK_YRKESTATUS == "Yrkessaktiv") %>% 
   filter(str_detect(q3rc_Home1_address_KommuneNr, "Bærum|Asker")) %>% 
   count(Month) %>% 
   ggplot(aes(x=Month, y=n)) +
   geom_col()
 
 
 
 d18_0 %>% 
   filter(REK_YRKESTATUS == "Yrkessaktiv") %>% 
   filter(str_detect(q3rc_Home1_address_KommuneNr, "Bærum|Asker")) %>% 
   # count(q3rc_Home1_address_KommuneNr) %>% 
   mutate(formaal_bruk = case_when(
     q38rc_detaljert_gjoremal == "Gikk/jogget/skitur" ~ "Rundturer",
     q38rc_detaljert_gjoremal == "Luftet hund" ~ "Rundturer",
     q38rc_detaljert_gjoremal == "Sykkeltur" ~ "Rundturer",
     str_detect(q38rc_detaljert_gjoremal, "hytte|overnatting") ~ "midlt overnatting",
     T ~ q38rc_type_gjoremal
   )) %>% 
   count(formaal_bruk) %>% 
   # write_clip()
 View
 
 
 

## bærum & asker, TRM X arbeidsreiser X sommer -----------------------------

### d19_0 ----- 
 
 d19_0 %>% 
   filter(REK_YRKESTATUS == "Yrkessaktiv") %>% 
   filter(str_detect(q3rc_Home1_address_KommuneNr, "Bærum|Asker")) %>% 
   filter(str_detect(q38rc_type_gjoremal, "Til/fra arbeid")) %>% 
   mutate(sesong = case_when(
     is.na(Month) ~ Month,
    str_detect(Month, "April|Mai|Ju|Aug|Sept") ~ "Sommer",
    T~ "Vinter"
            
            ) )%>%

   count(HTRM_REK, sesong) %>% 
   pivot_wider(names_from = sesong, values_from = n) %>% 
   write_clip()
   View()
 
   d19_0 %>% 
     filter(REK_YRKESTATUS == "Yrkessaktiv") %>% 
     filter(str_detect(q3rc_Home1_address_KommuneNr, "Bærum|Asker")) %>% 
     filter(str_detect(q38rc_type_gjoremal, "Til/fra arbeid")) %>% 
     filter(str_detect(Month, "April|Mai|Ju|Aug|Sept")) %>% 
     count(q25rc_Work_address_KommuneNr) %>% 
     # pivot_wider(names_from = q25rc_Work_address_KommuneNr, values_from = n) %>% 
     write_clip()
     View() 
   
   d19_0 %>% 
     filter(REK_YRKESTATUS == "Yrkessaktiv") %>% 
     filter(str_detect(q3rc_Home1_address_KommuneNr, "Bærum|Asker")) %>% 
     filter(str_detect(q38rc_type_gjoremal, "Til/fra arbeid")) %>% 
     filter(str_detect(Month, "April|Mai|Ju|Aug|Sept")) %>% 
     count(HTRM_REK, q25rc_Work_address_KommuneNr) %>% 
     pivot_wider(names_from = q25rc_Work_address_KommuneNr, values_from = n) %>% 
     # write_clip()
   View()  
   

   ### d18_0 + p18_0-----    
   
   # vekt??? nope.
   
   
   p18_0 %>% 
     select(matches("vekt")) # ingen kolonner
   
   
   p18_0 %>% 
     filter(REK_YRKESTATUS == "Yrkessaktiv") %>% 
     filter(str_detect(q3rc_Home1_address_KommuneNr, "Bærum|Asker")) %>% 
     # count(Year)
     summarise(gj = mean(Antall_Daglige_Reiser, na.rm = T))
   
   
    d18_0 %>% 
       filter(REK_YRKESTATUS == "Yrkessaktiv") %>% 
       filter(str_detect(q3rc_Home1_address_KommuneNr, "Bærum|Asker")) %>% 
       filter(str_detect(q38rc_type_gjoremal, "Til/fra arbeid")) %>%  
      filter(ReiseavstandKM < 500) %>% 
      #sjekke lengder
      # select(HTRM_REK, ReiseavstandKM, q3rc_Home1_address_KommuneNr, q25rc_Work_address_KommuneNr) %>% 
      # View
      
      summarise(gj = mean(ReiseavstandKM, na.rm = T), med = median(ReiseavstandKM, na.rm = T))

  
       d18_0 %>% 
     filter(REK_YRKESTATUS == "Yrkessaktiv") %>% 
     filter(str_detect(q3rc_Home1_address_KommuneNr, "Bærum|Asker")) %>% 
     filter(str_detect(q38rc_type_gjoremal, "Til/fra arbeid")) %>% 
     mutate(sesong = case_when(
       is.na(Month) ~ Month,
       str_detect(Month, "April|Mai|Ju|Aug|Sept") ~ "Sommer",
       T~ "Vinter"
       
     ) )%>%
     
     count(HTRM_REK, sesong) %>% 
     pivot_wider(names_from = sesong, values_from = n) %>% 
     # write_clip()
   View()
   
   d18_0 %>% 
     filter(REK_YRKESTATUS == "Yrkessaktiv") %>% 
     filter(str_detect(q3rc_Home1_address_KommuneNr, "Bærum|Asker")) %>% 
     filter(str_detect(q38rc_type_gjoremal, "Til/fra arbeid")) %>% 
     filter(str_detect(Month, "April|Mai|Ju|Aug|Sept")) %>% 
     count(q25rc_Work_address_KommuneNr) %>% 
     # pivot_wider(names_from = q25rc_Work_address_KommuneNr, values_from = n) %>% 
     write_clip()
   View() 
  
   d18_0 %>% 
     filter(REK_YRKESTATUS == "Yrkessaktiv") %>% 
     filter(str_detect(q3rc_Home1_address_KommuneNr, "Bærum|Asker")) %>% 
     filter(str_detect(q38rc_type_gjoremal, "Til/fra arbeid")) %>% 
     filter(str_detect(Month, "April|Mai|Ju|Aug|Sept")) %>% 
     count(HTRM_REK, q25rc_Work_address_KommuneNr) %>% 
     pivot_wider(names_from = q25rc_Work_address_KommuneNr, values_from = n) %>% 
     # write_clip()
     View()  

   

# stavanger ---------------------------------------------------------------

p18 %>% 
     filter(str_detect(q3rc_Home1_address_KommuneNr, "Stavanger")) %>% 
     count(q3rc_Home1_address_KommuneNr, Year) %>% 
     View
   