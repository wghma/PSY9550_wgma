library(brms)
laf_dat <- Laffer %>%
mutate(across(everything(), standardize),
tax_rate2 = tax_rate ^ 2)
laf_line <- brm(tax_revenue ~ 1 + tax_rate, data = laf_dat, family = gaussian,
prior = c(prior(normal(0, 0.2), class = Intercept),
prior(normal(0, 0.5), class = b),
prior(exponential(1), class = sigma)),
iter = 4000, warmup = 2000, chains = 4, cores = 4, seed = 1234,
file = here("fits", "chp7", "b7h1-line.rds"))
data(Laffer)
library(brms)
library(stan)
data(Laffer)
library(brms)
# library(stan)
laf_dat <- Laffer %>%
mutate(across(everything(), standardize),
tax_rate2 = tax_rate ^ 2)
laf_line <- brm(tax_revenue ~ 1 + tax_rate, data = laf_dat, family = gaussian,
prior = c(prior(normal(0, 0.2), class = Intercept),
prior(normal(0, 0.5), class = b),
prior(exponential(1), class = sigma)),
iter = 4000, warmup = 2000, chains = 4, cores = 4, seed = 1234,
file = here("fits", "chp7", "b7h1-line.rds"))
setwd("~/00_PhD_lokal/PSY9550_statistical_rethinking/PSY9550_wgma")
#| include: false
#| message: false
#| warning: false
#| results: hide
knitr::opts_chunk$set(echo = TRUE, dpi = 300)
library(rethinking)
library(magrittr)
library(tidyverse)
library(dagitty)
Sys.setlocale("LC_ALL", 'en_US.UTF-8')
setwd("~/00_PhD_lokal/PSY9550_statistical_rethinking/PSY9550_wgma") ### !!!!!
# add other packages you use here
data(Laffer)
library(brms)
# library(stan)
laf_dat <- Laffer %>%
mutate(across(everything(), standardize),
tax_rate2 = tax_rate ^ 2)
laf_line <- brm(tax_revenue ~ 1 + tax_rate, data = laf_dat, family = gaussian,
prior = c(prior(normal(0, 0.2), class = Intercept),
prior(normal(0, 0.5), class = b),
prior(exponential(1), class = sigma)),
iter = 4000, warmup = 2000, chains = 4, cores = 4, seed = 1234
# file = here("fits", "chp7", "b7h1-line.rds")
)
islands <- tibble(island = paste("Island", 1:3),
a = c(0.2, 0.8, 0.05),
b = c(0.2, 0.1, 0.15),
c = c(0.2, 0.05, 0.7),
d = c(0.2, 0.025, 0.05),
e = c(0.2, 0.025, 0.05)) %>%
pivot_longer(-island, names_to = "species", values_to = "prop")
islands %>%
group_by(island) %>%
summarize(prop = list(prop), .groups = "drop") %>%
mutate(entropy = map_dbl(prop, calc_entropy))
#earlier function code that is reused in this example.
p_logp <- function(p) {
if (p == 0) return(0)
p * log(p)
}
calc_entropy <- function(x) {
avg_logprob <- sum(map_dbl(x, p_logp))
-1 * avg_logprob
}
# setting up island data
islands <- tibble(island = paste("Island", 1:3),
a = c(0.2, 0.8, 0.05),
b = c(0.2, 0.1, 0.15),
c = c(0.2, 0.05, 0.7),
d = c(0.2, 0.025, 0.05),
e = c(0.2, 0.025, 0.05)) %>%
pivot_longer(-island, names_to = "species", values_to = "prop")
islands %>%
group_by(island) %>%
summarize(prop = list(prop), .groups = "drop") %>%
mutate(entropy = map_dbl(prop, calc_entropy))
#> # A tibble: 3 × 3
#>   island   prop      entropy
#>   <chr>    <list>      <dbl>
#> 1 Island 1 <dbl [5]>   1.61
#> 2 Island 2 <dbl [5]>   0.743
#> 3 Island 3 <dbl [5]>   0.984
View(islands)
p_logp(0.5)
p_logp(c(0.2,0.4,0.4))
islands %>%
group_by(island) %>%
summarize(prop = list(prop), .groups = "drop") %>%
mutate(entropy = map_dbl(prop, calc_entropy)) %>%
View
d_kl <- function(p, q) {
sum(p * (log(p) - log(q)))
}
crossing(model = paste("Island", 1:3),
predicts = paste("Island", 1:3)) %>%
filter(model != predicts) %>%
left_join(islands, by = c("model" = "island")) %>%
rename(model_prop = prop) %>%
left_join(islands, by = c("predicts" = "island", "species")) %>%
rename(predict_prop = prop) %>%
group_by(model, predicts) %>%
summarize(q = list(model_prop),
p = list(predict_prop),
.groups = "drop") %>%
mutate(kl_distance = map2_dbl(p, q, d_kl))
#> # A tibble: 6 × 5
#>   model    predicts q         p         kl_distance
#>   <chr>    <chr>    <list>    <list>          <dbl>
#> 1 Island 1 Island 2 <dbl [5]> <dbl [5]>       0.866
#> 2 Island 1 Island 3 <dbl [5]> <dbl [5]>       0.626
#> 3 Island 2 Island 1 <dbl [5]> <dbl [5]>       0.970
#> 4 Island 2 Island 3 <dbl [5]> <dbl [5]>       1.84
#> 5 Island 3 Island 1 <dbl [5]> <dbl [5]>       0.639
#> 6 Island 3 Island 2 <dbl [5]> <dbl [5]>       2.01
crossing(model = paste("Island", 1:3),
predicts = paste("Island", 1:3))
#| include: false
#| message: false
#| warning: false
#| results: hide
knitr::opts_chunk$set(echo = TRUE, dpi = 300)
library(rethinking)
library(magrittr)
library(tidyverse)
library(dagitty)
Sys.setlocale("LC_ALL", 'en_US.UTF-8')
# add other packages you use here
d_tulips <- data("tulips")
View(tulips)
# dataset = tulips
d <- tulips
# dataset = tulips
d <- tulips %>%
mutate(
blooms_std <- blooms / max(blooms), # scale
water_cent <- water - mean(water), # standardize
shade_cent <- shade - mean(shade), # standardize
)
data("tulips")
# dataset = tulips
d <- tulips %>%
mutate(
blooms_std <- blooms / max(blooms), # scale
water_cent <- water - mean(water), # standardize
shade_cent <- shade - mean(shade), # standardize
)
m8.7 <- quap(
alist(
blooms_std ~ dnorm( mu , sigma ) ,
mu <- a + bw_log*water_cent + bs_log*shade_cent ,
a ~ dnorm( 0.5 , 0.25 ) ,
bw_log ~ dlognorm( 0 , 0.25 ) ,
bs_log ~ dlognorm( 0 , 0.25 ) ,
sigma ~ dexp( 1 ) ),
data=d )
data("tulips")
# dataset = tulips
d <- tulips %>%
mutate(
blooms_std <- blooms / max(blooms), # scale
water_cent <- water - mean(water), # standardize
shade_cent <- shade - mean(shade), # standardize
)
m8.7 <- quap(
alist(
blooms_std ~ dnorm( mu , sigma ) ,
mu <- a + bw_log*water_cent + bs_log*shade_cent ,
a ~ dnorm( 0.5 , 0.25 ) ,
bw_log ~ dlnorm( 0 , 0.25 ) ,
bs_log ~ dlnorm( 0 , 0.25 ) ,
sigma ~ dexp( 1 ) ),
data=d )
dlnorm(0,1)
m8.7 <- quap(
alist(
blooms_std ~ dnorm( mu , sigma ) ,
mu <- a + bw_log*water_cent + bs_log*shade_cent ,
a ~ dnorm( 0.5 , 0.25 ) ,
bw_log ~ dlnorm( 0 , 0.25 ) ,
bs_log ~ dlnorm( 0 , 0.25 ) ,
sigma ~ dexp( 1 ) ),
data=d )
rep(dlnorm(0,0.25), 100)
dlnorm(1,0.25)
rep(dlnorm(1,0.25), 100)
m8.6 <- quap(
alist(
blooms_std ~ dnorm( mu , sigma ) ,
mu <- a + bw*water_cent + bs*shade_cent ,
a ~ dnorm( 0.5 , 0.25 ) ,
bw ~ dnorm( 0 , 0.25 ) ,
bs ~ dnorm( 0 , 0.25 ) ,
sigma ~ dexp( 1 ) ),
data=d )
rep(dnorm(1,0.25), 100)
dnorm(0,0.25)
dnorm(0,0.25)
seed(100)
seeds(100)
set.seed(100)
dnorm(0,0.25)
?dnorm
rnorm(100, 0,025)
rnorm(100, 0,0.25)
rlnorm(100,0,025)
rlnorm(100,0,0.25)
log_trekk <- rnorm(1e4, 0, 0.25)
hist(log_trekk)
log_trekk <- rlnorm(1e4, 0, 0.25)
hist(log_trekk)
min(log_trekk)
log_trekk <- rlnorm(1e4, 0, 0.3)
hist(log_trekk)
min(log_trekk)
log_trekk <- rlnorm(1e4, 0, 0.3)
hist(log_trekk)
min(log_trekk)
log_trekk <- rlnorm(1e4, 0, 0.3)
# hist(log_trekk)
min(log_trekk)
# hist(log_trekk)
min(log_trekk)
log_trekk <- rlnorm(1e4, 0, 0.4)
# hist(log_trekk)
min(log_trekk)
log_trekk <- rlnorm(1e4, 0, 0.4)
hist(log_trekk)
min(log_trekk)
log_trekk <- rlnorm(1e4, 0, 0.5)
# hist(log_trekk)
min(log_trekk)
log_trekk <- -rlnorm(1e4, 0, 0.5)
hist(log_trekk)
# min(log_trekk)
data("tulips")
# dataset = tulips
d <- tulips %>%
mutate(
blooms_std <- blooms / max(blooms), # scale
water_cent <- water - mean(water), # standardize
shade_cent <- shade - mean(shade), # standardize
)
m8.7 <- quap(
alist(
blooms_std ~ dnorm( mu , sigma ) ,
mu <- a + bw_log*water_cent + bs_log*shade_cent ,
a ~ dnorm( 0.5 , 0.25 ) ,
bw_log ~ dlnorm( 0 , 0.5 ) ,
bs_log ~ -dlnorm( 0 , 0.5 ) ,
sigma ~ dexp( 1 ) ),
data=d )
data("tulips")
# dataset = tulips
d <- tulips %>%
mutate(
blooms_std <- blooms / max(blooms), # scale
water_cent <- water - mean(water), # standardize
shade_cent <- shade - mean(shade), # standardize
)
m8.7 <- quap(
alist(
blooms_std ~ dnorm( mu , sigma ) ,
mu <- a + bw_log*water_cent + bs_log*shade_cent ,
a ~ dnorm( 0.5 , 0.25 ) ,
bw_log ~ dlnorm( 0 , 0.5 ) ,
bs_log ~ -dlnorm( 0 , 0.5 ) ,
sigma ~ dexp( 1 ) ),
data=d )
View(d)
data("tulips")
# dataset = tulips
d <- tulips %>%
mutate(
blooms_std =blooms / max(blooms), # scale
water_cent = water - mean(water), # standardize
shade_cent = shade - mean(shade), # standardize
)
m8.7 <- quap(
alist(
blooms_std ~ dnorm( mu , sigma ) ,
mu <- a + bw_log*water_cent + bs_log*shade_cent ,
a ~ dnorm( 0.5 , 0.25 ) ,
bw_log ~ dlnorm( 0 , 0.5 ) ,
bs_log ~ -dlnorm( 0 , 0.5 ) ,
sigma ~ dexp( 1 ) ),
data=d )
m8.8 <- quap(
alist(
blooms_std ~ dnorm( mu , sigma ) ,
mu <- a + bw_log*water_cent + bs_log*shade_cent + bws*water_cent*shade_cent,
a ~ dnorm( 0.5 , 0.25 ) ,
bw_log ~ dlnorm( 0 , 0.5 ) ,
bs_log ~ -dlnorm( 0 , 0.5 ) ,
bws ~ dnorm( 0 , 0.25 ) ,
sigma ~ dexp( 1 ) ),
data=d )
prior <- extract.prior(m8.8)
par(mfrow=c(1,3)) # 3 plots in 1 row
for ( s in -1:1 ) {
idx <- which( d$shade_cent==s )
plot( d$water_cent[idx] , d$blooms_std[idx] , xlim=c(-1,1) , ylim=c(0,1) , xlab="water" , ylab="blooms" , pch=16 , col=rangi2 )
mu <- link( m8.6 , post = prior,
data=data.frame( shade_cent=s , water_cent=-1:1 ) )
for ( i in 1:20 ) lines( -1:1 , mu[i,] , col=col.alpha("black",0.3) )
}
prior <- extract.prior(m8.8)
par(mfrow=c(1,3)) # 3 plots in 1 row
for ( s in -1:1 ) {
idx <- which( d$shade_cent==s )
plot( d$water_cent[idx] , d$blooms_std[idx] , xlim=c(-1,1) , ylim=c(0,1) , xlab="water" , ylab="blooms" , pch=16 , col=rangi2 )
mu <- link( m8.8 , post = prior,
data=data.frame( shade_cent=s , water_cent=-1:1 ) )
for ( i in 1:20 ) lines( -1:1 , mu[i,] , col=col.alpha("black",0.3) )
}
prior <- extract.prior(m8.8)
par(mfrow=c(1,3)) # 3 plots in 1 row
for ( s in -1:1 ) {
idx <- which( d$shade_cent==s )
plot( d$water_cent[idx] , d$blooms_std[idx] ,
xlim=c(-1,1) , ylim=c(0,1) ,
xlab="water" , ylab="blooms" ,
pch=16 , col=rangi2 )
mu <- link( m8.8 , post = prior,
data=data.frame( shade_cent=s , water_cent=-1:1 ) )
for ( i in 1:20 ) lines( -1:1 , mu[i,] , col=col.alpha("black",0.3) )
}
m8.6 <- quap(
alist(
blooms_std ~ dnorm( mu , sigma ) ,
mu <- a + bw*water_cent + bs*shade_cent ,
a ~ dnorm( 0.5 , 0.25 ) ,
bw ~ dnorm( 0 , 0.25 ) ,
bs ~ dnorm( 0 , 0.25 ) ,
sigma ~ dexp( 1 ) ),
data=d )
par(mfrow=c(1,3)) # 3 plots in 1 row
for ( s in -1:1 ) { idx <- which( d$shade_cent==s )
plot( d$water_cent[idx] , d$blooms_std[idx] ,
xlim=c(-1,1) , ylim=c(0,1) ,
xlab="water" , ylab="blooms" ,
pch=16 , col=rangi2 )
mu <- link( m8.6 , data=data.frame( shade_cent=s , water_cent=-1:1 ) )
for ( i in 1:20 ) lines( -1:1 , mu[i,] , col=col.alpha("black",0.3) )
}
set.seed(7)
prior <- extract.prior(m8.6)
par(mfrow=c(1,3)) # 3 plots in 1 row
for ( s in -1:1 ) { idx <- which( d$shade_cent==s )
plot( d$water_cent[idx] , d$blooms_std[idx] ,
xlim=c(-1,1) , ylim=c(0,1) ,
xlab="water" , ylab="blooms" ,
pch=16 , col=rangi2 )
mu <- link( m8.6 ,
post = prior,
data=data.frame( shade_cent=s , water_cent=-1:1 ) )
for ( i in 1:20 ) lines( -1:1 , mu[i,] , col=col.alpha("black",0.3) )
}
set.seed(7)
prior <- extract.prior(m8.6)
par(mfrow=c(1,3)) # 3 plots in 1 row
for ( s in -1:1 ) { idx <- which( d$shade_cent==s )
plot( d$water_cent[idx] , d$blooms_std[idx] ,
xlim=c(-1,1) , ylim=c(0,1) ,
xlab="water" , ylab="blooms" ,
pch=16 , col=rangi2 )
mu <- link( m8.6 ,
post = prior,
data=data.frame( shade_cent=s , water_cent=-1:1 ) )
for ( i in 1:20 ) lines( -1:1 , mu[i,] , col=col.alpha("black",0.3) )
}
prior <- extract.prior(m8.8)
par(mfrow=c(1,3)) # 3 plots in 1 row
for ( s in -1:1 ) {
idx <- which( d$shade_cent==s )
plot( d$water_cent[idx] , d$blooms_std[idx] ,
xlim=c(-1,1) , ylim=c(0,1) ,
xlab="water" , ylab="blooms" ,
pch=16 , col=rangi2 )
mu <- link( m8.8 , post = prior,
data=data.frame( shade_cent=s , water_cent=-1:1 ) )
for ( i in 1:20 ) lines( -1:1 , mu[i,] , col=col.alpha("black",0.3) )
}
m8.8 <- quap(
alist(
blooms_std ~ dnorm( mu , sigma ) ,
mu <- a + bw_log*water_cent + bs_log*shade_cent + bws*water_cent*shade_cent,
a ~ dnorm( 0.5 , 0.25 ) ,
bw_log ~ dlnorm( 0 , 0.5 ) ,
bs_log ~ -dlnorm( 0 , 0.5 ) ,
bws ~ dnorm( 0 , 0.25 ) ,
sigma ~ dexp( 1 ) ),
data=d )
# Om man ikke vil kjøre alt, men bare hente fra CSV
personfil <- read.csv2("personfil_korona.csv")
reisefil <- read.csv2("reisefil_korona.csv")
Sys.setlocale(locale = "English")
# Om man ikke vil kjøre alt, men bare hente fra CSV
personfil <- read.csv2("personfil_korona.csv")
reisefil <- read.csv2("reisefil_korona.csv")
library(tidyverse)
library(readxl)
library(naniar)
# Om man ikke vil kjøre alt, men bare hente fra CSV
personfil <- read.csv2("personfil_korona.csv")
reisefil <- read.csv2("reisefil_korona.csv")
setwd("~/00_PhD_lokal/RVU_corona/RVU_korona_github")
Sys.setlocale(locale = "English")
# Om man ikke vil kjøre alt, men bare hente fra CSV
personfil <- read.csv2("personfil_korona.csv")
reisefil <- read.csv2("reisefil_korona.csv")
View(personfil)
View(reisefil)
reisefil <- read.csv2("reisefil_korona.csv") %>%
filter(!is.na(reisemiddel))
library(clipr)
reisefil %>%
names() %>%
write_clip()
reisefil %>%
summary()
reisefil <- read.csv2("reisefil_korona.csv") %>%
filter(!is.na(reisemiddel)) %>%
select(-c(annerledes_0, X, svartid))
reisefil <- read.csv2("reisefil_korona.csv") %>%
filter(!is.na(reisemiddel)) %>%
select(-c(annerledes_0, X, Svartid, key))
reisefil <- read.csv2("reisefil_korona.csv") %>%
filter(!is.na(reisemiddel)) %>%
select(-c(annerledes_0, X, Svartid, key)) %>%
mutate(across(mindrekollektiv:mer_sykkelgange), ~ ifelse(is.na(.) & !is.na(annerledes_janei), 0, .))
reisefil <- read.csv2("reisefil_korona.csv") %>%
filter(!is.na(reisemiddel)) %>%
select(-c(annerledes_0, X, Svartid, key)) %>%
mutate(across(mindrekollektiv:mer_sykkelgange), ~ ifelse(is.na(.x) & !is.na(annerledes_janei), 0, .x))
reisefil <- read.csv2("reisefil_korona.csv") %>%
filter(!is.na(reisemiddel)) %>%
select(-c(annerledes_0, X, Svartid, key)) %>%
mutate(across(mindrekollektiv:mer_sykkelgange), ifelse(is.na(.x) & !is.na(annerledes_janei), 0, .x))
reisefil <- read.csv2("reisefil_korona.csv") %>%
filter(!is.na(reisemiddel)) %>%
select(-c(annerledes_0, X, Svartid, key)) %>%
mutate(across(mindrekollektiv:mer_sykkelgange), ~ifelse(is.na(.x) & !is.na(annerledes_janei), 0, .x))
reisefil <- read.csv2("reisefil_korona.csv") %>%
filter(!is.na(reisemiddel)) %>%
select(-c(annerledes_0, X, Svartid, key)) %>%
mutate(across(mindrekollektiv:mer_sykkelgange), ~ ifelse(is.na(.x) & !is.na(annerledes_janei), 0, .x))
reisefil <- read.csv2("reisefil_korona.csv") %>%
filter(!is.na(reisemiddel)) %>%
select(-c(annerledes_0, X, Svartid, key)) %>%
mutate(across(mindrekollektiv:mer_sykkelgange, ~ ifelse(is.na(.x) & !is.na(annerledes_janei), 0, .x)))
reisefil <- read.csv2("reisefil_korona.csv") %>%
filter(!is.na(reisemiddel)) %>%
select(-c(annerledes_0, X, Svartid, key)) %>%
mutate(across(mindrekollektiv:mer_sykkelgange, ~ ifelse(is.na(.x) & !is.na(annerledes_janei), 0, .x)),
ID = NR)
reisefil <- read.csv2("reisefil_korona.csv") %>%
filter(!is.na(reisemiddel)) %>%
select(-c(annerledes_0, X, Svartid, key)) %>%
mutate(across(mindrekollektiv:mer_sykkelgange, ~ ifelse(is.na(.x) & !is.na(annerledes_janei), 0, .x)),
ID = NR,
car_driver_boo = ifelse(reisemiddel == "Car, driver", 1, 0)
)
reisefil <- read.csv2("reisefil_korona.csv") %>%
filter(!is.na(reisemiddel)) %>%
select(-c(annerledes_0, X, Svartid, key, meantid)) %>%
mutate(across(mindrekollektiv:mer_sykkelgange, ~ ifelse(is.na(.x) & !is.na(annerledes_janei), 0, .x)),
ID = NR,
car_driver_boo = ifelse(reisemiddel == "Car, driver", 1, 0),
barn = ifelse(barn == "4 or more", 4, barn),
barn = as.numeric(barn)
)
reisefil_slim <- read.csv2("reisefil_korona.csv") %>%
filter(!is.na(reisemiddel)) %>%
select(-c(annerledes_0, X, Svartid, key, meantid)) %>%
mutate(across(mindrekollektiv:mer_sykkelgange, ~ ifelse(is.na(.x) & !is.na(annerledes_janei), 0, .x)),
ID = NR,
car_driver_boo = ifelse(reisemiddel == "Car, driver", 1, 0),
barn = ifelse(barn == "4 or more", 4, barn),
barn = as.numeric(barn)
)
library(tidyverse)
library(readxl)
library(naniar)
reisefil_slim <- read.csv2("reisefil_korona.csv") %>%
filter(!is.na(reisemiddel)) %>%
select(-c(annerledes_0, X, Svartid, key, meantid)) %>%
mutate(across(mindrekollektiv:mer_sykkelgange, ~ ifelse(is.na(.x) & !is.na(annerledes_janei), 0, .x)),
ID = NR,
car_driver_boo = ifelse(reisemiddel == "Car, driver", 1, 0),
barn = ifelse(barn == "4 or more", 4, barn),
barn = as.numeric(barn)
)
setwd("~/00_PhD_lokal/RVU_corona/RVU_korona_github") ### !!! change
Sys.setlocale(locale = "English")
reisefil_slim <- read.csv2("reisefil_korona.csv") %>%
filter(!is.na(reisemiddel)) %>%
select(-c(annerledes_0, X, Svartid, key, meantid)) %>%
mutate(across(mindrekollektiv:mer_sykkelgange, ~ ifelse(is.na(.x) & !is.na(annerledes_janei), 0, .x)),
ID = NR,
car_driver_boo = ifelse(reisemiddel == "Car, driver", 1, 0),
barn = ifelse(barn == "4 or more", 4, barn),
barn = as.numeric(barn)
)
write.csv2(reisefil_slim, "reisefil_slim.csv")
df0 <- read.csv2("reisefil_slim.csv")
