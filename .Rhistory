my_histStack(filtered.samples[1:kk[i],], ylim)
dev.off()
}
imgs = list.files("anim", full.names = T)
library(av)
av::av_encode_video(imgs, framerate = 30,
output = fn)
}
set.seed(123)
# draw the background
draw_pie()
draw_ellipse()
?draw_pie
install.packages("cape")
library(cape)
set.seed(123)
draw_ellipse()
install.packages("cursr")
library(cursr)
# draw the background
draw_pie()
draw_ellipse()
# draw the background
cape::draw_pie()
library(cape)
library(cursr)
N = 365
is.winter = vector(length = N) # vector to count winter days
is.snow = vector(length = N) # vector to count snow days
for (k in 1:N) {
# generate random point with custom function
xy = rpoint_in_circle()
# check if it is a snow day, i.e. in ellipse, with custom function
is.snow[k] = in_ellipse(xy,h.e,k.e,a.e,b.e,e.rot)
# check if it is a winter day
is.winter[k] = xy[1] > 0 & xy[2] < 0
# plot points
points(xy[1],xy[2],
pch = ifelse(is.snow[k] == T,8,21), cex = .75,
bg = ifelse(is.winter[k] == T,"blue","red"),
col = ifelse(is.winter[k] == T,"blue","red"))
}
library(cape)
library(cape)
library(cursr)
library(cape)
library(cursr)
```{r}
set.seed(123)
# draw the background
cape::draw_pie()
# draw the background
draw_pie()
library(cursr)
library(cape)
set.seed(123)
# draw the background
draw_pie()
draw_ellipse()
48/248
library(cursr)
library(cape)
library(coda)
library(mvtnorm)
library(devtools)
library(loo)
library(dagitty)
library(magrittr)
# draw the background
draw_pie()
draw_ellipse()
set.seed(123)
par(mar = c(0,0,0,0))
cols = c("violet","red","orange","green4")
pie(c(1,9,89,901), labels = "", border = NA, col = cols )
legend("topleft",
bty = "n",
fill = cols,
legend = c(
"False negatitve",
"True positive",
"False positive",
"True Negative"
))
pie(c(1,9,89,901), labels = "", border = NA, col = cols )
p_grid = seq(0,1,by = .05)
prior = dbeta(p_grid,2,1)
plot(p_grid, prior, type = "h", col = "blue",
ylab = "density", main = "Prior")
---
title: "PSY9550_chp3_wgma"
#| include: false
#| message: false
#| warning: false
#| results: hide
knitr::opts_chunk$set(echo = TRUE, dpi = 300)
library(rethinking)
library(magrittr)
# add other packages you use here
p_grid <- seq( from=0 , to=1 , length.out=1000 )
prior <- rep( 1 , 1000 )
likelihood <- dbinom( 6 , size=9 , prob=p_grid )
posterior <- likelihood * prior
posterior <- posterior / sum(posterior) set.seed(100)
library(rethinking)
library(magrittr)
library(tidyverse)
p_grid <- seq( from=0 , to=1 , length.out=1000 )
prior <- rep( 1 , 1000 )
likelihood <- dbinom( 6 , size=9 , prob=p_grid )
posterior <- likelihood * prior
posterior <- posterior / sum(posterior)
set.seed(100)
samples <- sample( p_grid , prob=posterior , size=1e4 , replace=TRUE )
sum(samples < 0.2)
n_samples = 1e4
samples <- sample( p_grid , prob=posterior , size=n_samples , replace=TRUE )
sum(samples < 0.2)/n_samples
quantile(samples, 0.2)
quantile (samples, 0.2)
quantile(samples, 0.8)
HPDI( samples , prob=0.66 )
plot(samples)
```
```
```{r}
plot(samples)
quantile(samples, 0.5)
100-17
quantile(samples, 0.17)
quantile(samples, 0.83)
quantile(samples, 0.17)
quantile(samples, 0.83)
grid_size = 1000
p_grid <- seq( from=0 , to=1 , length.out=grid_size )
prior <- rep( 1 , grid_size )
w = 8
n = 15
grid_size = 1000
w = 8
n = 15
p_grid <- seq( from=0 , to=1 , length.out=grid_size )
prior <- rep( 1 , grid_size )
likelihood <- dbinom( w , size=n , prob=p_grid )
posterior <- likelihood * prior
posterior <- posterior / sum(posterior)
plot( p_grid , posterior ,
type="b" ,
xlab="probability of water" ,
ylab="posterior probability" )
grid_size = 50
w = 8
n = 15
p_grid <- seq( from=0 , to=1 , length.out=grid_size )
prior <- rep( 1 , grid_size )
likelihood <- dbinom( w , size=n , prob=p_grid )
posterior <- likelihood * prior
posterior <- posterior / sum(posterior)
set.seed(57)
n_samples = 1e4
samples <- sample( p_grid , prob=posterior , size=n_samples , replace=TRUE )
```{r}
HPDI( samples , prob=0.9 )
HPDI( samples , prob=0.9 )
grid_size = 1000
w = 8
n = 15
p_grid <- seq( from=0 , to=1 , length.out=grid_size )
prior <- rep( 1 , grid_size )
likelihood <- dbinom( w , size=n , prob=p_grid )
posterior <- likelihood * prior
posterior <- posterior / sum(posterior)
set.seed(57)
n_samples = 1e4
samples <- sample( p_grid , prob=posterior , size=n_samples , replace=TRUE )
w <- rbinom( 1e4 , size=w , prob=samples )
rbinom( 1e4 , size=w , prob=samples )
e
simulated_draws <-  rbinom( 1e4 , size=w , prob=samples )
simulated_draws %>%
slice(1:10)
simulated_draws[1:10]
n_simulations = 1e4
simulated_draws <-  rbinom( n_simulations , size=w , prob=samples )
simulated_draws[1:10]
simulated_data <-  rbinom( n_simulations , size=w , prob=samples )
simulated_data[1:10]
table(simulated_data)/n_simulations
grid_size = 1000
w = 8
n = 15
p_grid <- seq( from=0 , to=1 , length.out=grid_size )
prior <- rep( 1 , grid_size )
likelihood <- dbinom( w , size=n , prob=p_grid )
posterior <- likelihood * prior
posterior <- posterior / sum(posterior)
set.seed(57)
n_samples = 1e4
samples <- sample( p_grid , prob=posterior , size=n_samples , replace=TRUE )
n_simulations = 1e4
simulated_data <-  rbinom( n_simulations , size=n , prob=samples )
simulated_data[1:10]
table(simulated_data)/n_simulations
w/n
simulated_data[1:10]
simulated_data <-  rbinom( n_simulations , size=9 , prob=samples )
simulated_data[1:10]
table(simulated_data)/n_simulations
grid_size = 1000
w = 8
n = 15
p_grid <- seq( from=0 , to=1 , length.out=grid_size )
prior <- prior <- 1*(p_grid>= 0.5)
likelihood <- dbinom( w , size=n , prob=p_grid )
posterior <- likelihood * prior
posterior <- posterior / sum(posterior)
```{r, warning = F}
plot( p_grid , posterior ,
type="b" ,
xlab="probability of water" ,
ylab="posterior probability" )
n_simulations = 1e4
simulated_data <-  rbinom( n_simulations , size=n , prob=samples )
# simulated_data[1:10]
table(simulated_data)/n_simulations
n_simulations = 1e4
simulated_data <-  rbinom( n_simulations , size=9 , prob=samples )
# simulated_data[1:10]
table(simulated_data)/n_simulations
grid_size = 1000
w = 8
n = 15
p_grid <- seq( from=0 , to=1 , length.out=grid_size )
prior <- rep( 1 , grid_size )
likelihood <- dbinom( w , size=n , prob=p_grid )
posterior_uni <- likelihood * prior
posterior_uni <- posterior / sum(posterior)
simulated_data_real <-  rbinom( n_simulations , size=9 , prob=0.7 )
dataframe(simulated_data_uni, simulated_data_dich, simulated_data_real)
cbind(simulated_data_uni, simulated_data_dich, simulated_data_real) %>%
tibble() %>%
View
simulated_data_uni
#posterior_uni
#sample_uni
set.seed(57)
n_simulations = 1e4
simulated_data_uni <-  rbinom( n_simulations , size=n , prob=samples )
simulated_data_uni[1:10]
table(simulated_data_uni)/n_simulations
grid_size = 1000
w = 8
n = 15
p_grid <- seq( from=0 , to=1 , length.out=grid_size )
prior <- rep( 1 , grid_size )
likelihood <- dbinom( w , size=n , prob=p_grid )
posterior_uni <- likelihood * prior
posterior_uni <- posterior / sum(posterior)
```{r, warning = F}
set.seed(57)
n_samples = 1e4
samples_uni <- sample( p_grid , prob=posterior_uni , size=n_samples , replace=TRUE )
HPDI( samples_uni , prob=0.9 )
n_simulations = 1e4
simulated_data_uni <-  rbinom( n_simulations , size=n , prob=samples )
simulated_data_uni[1:10]
n_simulations = 1e4
simulated_data_uni <-  rbinom( n_simulations , size=9 , prob=samples )
simulated_data_uni[1:10]
table(simulated_data_uni)/n_simulations
grid_size = 1000
w = 8
n = 15
p_grid <- seq( from=0 , to=1 , length.out=grid_size )
prior <- prior <- 1*(p_grid>= 0.5)
likelihood <- dbinom( w , size=n , prob=p_grid )
# dich = dichotomous
posterior_dich <- likelihood * prior
posterior_dich <- posterior / sum(posterior)
```{r, warning = F}
set.seed(57)
n_samples = 1e4
samples_dich <- sample( p_grid , prob=posterior_dich , size=n_samples , replace=TRUE )
HPDI( samples_dich , prob=0.9 )
n_simulations = 1e4
simulated_data_dich <-  rbinom( n_simulations , size=n , prob=samples_dich )
# simulated_data[1:10]
table(simulated_data_dich)/n_simulations
simulated_data_dich <-  rbinom( n_simulations , size=9 , prob=samples )
# simulated_data[1:10]
table(simulated_data_dich)/n_simulations
simulated_data_real <-  rbinom( n_simulations , size=9 , prob=0.7 )
cbind(simulated_data_uni, simulated_data_dich, simulated_data_real) %>%
tibble() %>%
View
simulated_data_uni
cbind(uni = simulated_data_uni, dich=simulated_data_dich, real=simulated_data_real) %>%
tibble() %>%
View
simulated_data_uni
as.dataframe(uni = simulated_data_uni, dich=simulated_data_dich, real=simulated_data_real) %>%
tibble() %>%
View
simulated_data_uni
data.frame(uni = simulated_data_uni, dich=simulated_data_dich, real=simulated_data_real) %>%
tibble() %>%
View
simulated_data_uni
data.frame(uni = simulated_data_uni, dich=simulated_data_dich, real=simulated_data_real) %>%
tibble() %>%
ggplot()+
geom_hist()
library(tidyverse)
data.frame(prior=prior, uni = simulated_data_uni, dich=simulated_data_dich, real=simulated_data_real) %>%
tibble() %>%
pivot_longer(!prior, names_to = "sim", values_to = "value") %>%
ggplot(aes(color=sim))+
geom_line()
data.frame(prior=prior, uni = simulated_data_uni, dich=simulated_data_dich, real=simulated_data_real) %>%
tibble() %>%
pivot_longer(!prior, names_to = "sim", values_to = "value") %>%
ggplot(aes(color=sim))+
geom_hist()
data.frame(prior=prior, uni = simulated_data_uni, dich=simulated_data_dich, real=simulated_data_real) %>%
tibble() %>%
pivot_longer(!prior, names_to = "sim", values_to = "value") %>%
ggplot(aes(color=sim))+
geom_histogram()
data.frame(prior=prior, uni = simulated_data_uni, dich=simulated_data_dich, real=simulated_data_real) %>%
tibble() %>%
pivot_longer(!prior, names_to = "sim", values_to = "value") %>%
ggplot(aes(x=value, color=sim))+
geom_histogram()
data.frame(prior=prior, uni = simulated_data_uni, dich=simulated_data_dich, real=simulated_data_real) %>%
tibble() %>%
pivot_longer(!prior, names_to = "sim", values_to = "value") %>%
ggplot(aes(x=value, color=sim))+
geom_histogram(position="identity")
data.frame(prior=prior, uni = simulated_data_uni, dich=simulated_data_dich, real=simulated_data_real) %>%
tibble() %>%
pivot_longer(!prior, names_to = "sim", values_to = "value") %>%
ggplot(aes(x=value, fill=sim))+
geom_histogram(position="identity")
data.frame(prior=prior, uni = simulated_data_uni, dich=simulated_data_dich, real=simulated_data_real) %>%
tibble() %>%
pivot_longer(!prior, names_to = "sim", values_to = "value") %>%
ggplot(aes(x=value, fill=sim))+
geom_line()
data.frame(prior=prior, uni = simulated_data_uni, dich=simulated_data_dich, real=simulated_data_real) %>%
tibble() %>%
pivot_longer(!prior, names_to = "sim", values_to = "value") %>%
ggplot(aes(x=value, fill=sim))+
geom_density()
data.frame(prior=prior, uni = simulated_data_uni, dich=simulated_data_dich, real=simulated_data_real) %>%
tibble() %>%
pivot_longer(!prior, names_to = "sim", values_to = "value") %>%
ggplot(aes(x=value, fill=sim))+
geom_density(alpha=0.4)
data.frame(prior=prior, uni = simulated_data_uni, dich=simulated_data_dich, real=simulated_data_real) %>%
tibble() %>%
pivot_longer(!prior, names_to = "sim", values_to = "value") %>%
ggplot(aes(x=value, fill=sim))+
geom_histogram(alpha=0.4, position = "identity")
data.frame(prior=prior, uni = simulated_data_uni, dich=simulated_data_dich, real=simulated_data_real) %>%
tibble() %>%
pivot_longer(!prior, names_to = "sim", values_to = "value") %>%
ggplot(aes(x=value, fill=sim, color =sim))+
geom_histogram(alpha=0.4, position = "identity")
data.frame(prior=prior, uni = simulated_data_uni, dich=simulated_data_dich, real=simulated_data_real) %>%
tibble() %>%
pivot_longer(!prior, names_to = "sim", values_to = "value") %>%
ggplot(aes(x=value, fill=sim, color =sim))+
geom_histogram(alpha=0.4, position = "identity")+
scale_x_continuous(n.breaks = 9)
data.frame(prior=prior, uni = simulated_data_uni, dich=simulated_data_dich, real=simulated_data_real) %>%
tibble() %>%
pivot_longer(!prior, names_to = "sim", values_to = "value") %>%
ggplot(aes(x=value, fill=sim, color =sim))+
geom_histogram(alpha=0.7, position = "identity")+
scale_x_continuous(n.breaks = 9)
data.frame(prior=prior, uni = simulated_data_uni, dich=simulated_data_dich, real=simulated_data_real) %>%
tibble() %>%
pivot_longer(!prior, names_to = "sim", values_to = "value") %>%
ggplot(aes(x=value, fill=sim, color =sim))+
geom_density()+
# geom_histogram(alpha=0.7, position = "identity")+
scale_x_continuous(n.breaks = 9)
data.frame(prior=prior, uni = simulated_data_uni, dich=simulated_data_dich, real=simulated_data_real) %>%
tibble() %>%
pivot_longer(!prior, names_to = "sim", values_to = "value") %>%
ggplot(aes(x=value, fill=sim, color =sim))+
geom_density(bw = 1)+
# geom_histogram(alpha=0.7, position = "identity")+
scale_x_continuous(n.breaks = 9)
data.frame(prior=prior, uni = simulated_data_uni, dich=simulated_data_dich, real=simulated_data_real) %>%
tibble() %>%
pivot_longer(!prior, names_to = "sim", values_to = "value") %>%
ggplot(aes(x=value, fill=sim, color =sim, alpha = 0.5))+
geom_density(bw = 1)+
# geom_histogram(alpha=0.7, position = "identity")+
scale_x_continuous(n.breaks = 9)
data.frame(prior=prior, uni = simulated_data_uni, dich=simulated_data_dich, real=simulated_data_real) %>%
tibble() %>%
pivot_longer(!prior, names_to = "sim", values_to = "value") %>%
ggplot(aes(x=value, fill=sim, color =sim))+
geom_density(bw = 1, alpha = 0.5)+
# geom_histogram(alpha=0.7, position = "identity")+
scale_x_continuous(n.breaks = 9)
```{r}
8/15
samples[1:10]
6/9
grid_size = 1000
p_grid <- seq( from=0 , to=1 , length.out=grid_size )
prior <- rep( 1 , grid_size )
likelihood <- dbinom( 8 , size=15 , prob=p_grid )
posterior_uni <- likelihood * prior
posterior_uni <- posterior / sum(posterior)
plot( p_grid , posterior_uni ,
type="b" ,
xlab="probability of water" ,
ylab="posterior probability" )
grid_size = 1000
p_grid <- seq( from=0 , to=1 , length.out=grid_size )
prior <- rep( 1 , grid_size )
likelihood <- dbinom( 8 , size=15 , prob=p_grid )
posterior_uni <- likelihood * prior
posterior_uni <- posterior / sum(posterior)
plot( p_grid , posterior_uni ,
type="b" ,
xlab="probability of water" ,
ylab="posterior probability" )
# library(tidyverse)
data.frame(prior=prior, uni = simulated_data_uni, dich=simulated_data_dich, real=simulated_data_real) %>%
tibble() %>%
pivot_longer(!prior, names_to = "sim", values_to = "value") %>%
ggplot(aes(x=value, fill=sim, color =sim))+
geom_density(bw = 1, alpha = 0.5)+
# geom_histogram(alpha=0.7, position = "identity")+
scale_x_continuous(breaks = seq(1,12,1))
eq(1,12,1)
eq(1,12,1)
eq(1,12,1)
seq(1,12,1)
HPDI(samples_uni, prob = 0.9)
HPDI(samples_dich, prob = 0.9)
set.seed(57)
n_samples = 1e4
samples_dich <- sample( p_grid , prob=posterior_dich , size=n_samples , replace=TRUE )
HPDI( samples_dich , prob=0.9 )
samples_uni <- sample( p_grid , prob=posterior_uni , size=n_samples , replace=TRUE )
HPDI( samples_uni , prob=0.9 )
grid_size = 1000
p_grid <- seq( from=0 , to=1 , length.out=grid_size )
prior <- rep( 1 , grid_size )
likelihood <- dbinom( 8 , size=15 , prob=p_grid )
posterior_uni <- likelihood * prior
posterior_uni <- posterior_uni / sum(posterior_uni)
HPDI( samples_uni , prob=0.9 )
grid_size = 1000
p_grid <- seq( from=0 , to=1 , length.out=grid_size )
prior <- rep( 1 , grid_size )
likelihood <- dbinom( 8 , size=15 , prob=p_grid )
posterior_uni <- likelihood * prior
posterior_uni <- posterior_uni / sum(posterior_uni)
plot( p_grid , posterior_uni ,
type="b" ,
xlab="probability of water" ,
ylab="posterior probability" )
set.seed(57)
n_samples = 1e4
samples_uni <- sample( p_grid , prob=posterior_uni , size=n_samples , replace=TRUE )
HPDI( samples_uni , prob=0.9 )
HPDI(samples_uni, prob = 0.9)
```{r}
HPDI(samples_dich, prob = 0.9)
# library(tidyverse)
data.frame(prior=prior,
uni = simulated_data_uni,
dich=simulated_data_dich,
real=simulated_data_real) %>%
tibble() %>%
pivot_longer(!prior, names_to = "sim", values_to = "value") %>%
ggplot(aes(x=value, fill=sim, color =sim))+
geom_density(bw = 1, alpha = 0.5)+
# geom_histogram(alpha=0.7, position = "identity")+
scale_x_continuous(breaks = seq(1,12,1) )
# library(tidyverse)
data.frame(prior=prior,
# uni = simulated_data_uni,
dich=simulated_data_dich,
real=simulated_data_real) %>%
tibble() %>%
pivot_longer(!prior, names_to = "sim", values_to = "value") %>%
ggplot(aes(x=value, fill=sim, color =sim))+
geom_density(bw = 1, alpha = 0.5)+
# geom_histogram(alpha=0.7, position = "identity")+
scale_x_continuous(breaks = seq(1,12,1) )
# library(tidyverse)
data.frame(prior=prior,
uni = simulated_data_uni,
dich=simulated_data_dich,
real=simulated_data_real) %>%
tibble() %>%
pivot_longer(!prior, names_to = "sim", values_to = "value") %>%
ggplot(aes(x=value, fill=sim, color =sim))+
geom_density(bw = 1, alpha = 0.5)+
# geom_histogram(alpha=0.7, position = "identity")+
scale_x_continuous(breaks = seq(1,12,1) )
HPDI(samples_uni, prob = 0.9)
```{r}
HPDI(samples_dich, prob = 0.9)
