a ~ dnorm( 0 , 0.5 ) ,
b ~ dnorm( 0 , 0.5 ) ,
sigma ~ dexp( 1 )
) , data = foxes )
# plotting body weight ~ area size
x_seq <- seq( from=-3 , to=3.2 , length.out=30 )
mu <- link( body_area_model , data=list(area_std = x_seq) )
mu.mean <- apply( mu , 2, mean )
mu.PI <- apply( mu , 2 , PI )
# plot it all
plot( D ~ A , data=foxes , col=rangi2 )
body_area_model <- quap(
alist(
weight_std ~ dnorm(mu, sigma),
mu <- a + b*area_std,
a ~ dnorm( 0 , 0.5 ) ,
b ~ dnorm( 0 , 0.5 ) ,
sigma ~ dexp( 1 )
) , data = foxes )
body_grsize_model <- quap(
alist(
weight_std ~ dnorm(mu, sigma),
mu <- a + b*groupsize_std,
a ~ dnorm( 0 , 0.5 ) ,
b ~ dnorm( 0 , 0.5 ) ,
sigma ~ dexp( 1 )
) , data = foxes )
# plotting body weight ~ area size
x_seq <- seq( from=-3 , to=3.2 , length.out=30 )
mu <- link( body_area_model , data=list(area_std = x_seq) )
mu.mean <- apply( mu , 2, mean )
mu.PI <- apply( mu , 2 , PI )
plot( weight_std ~ area_std , data=foxes , col=rangi2 )
lines( x_seq , mu.mean ,lwd=2 )
shade( mu.PI , A_seq )
body_area_model <- quap(
alist(
weight_std ~ dnorm(mu, sigma),
mu <- a + b*area_std,
a ~ dnorm( 0 , 0.5 ) ,
b ~ dnorm( 0 , 0.5 ) ,
sigma ~ dexp( 1 )
) , data = foxes )
body_grsize_model <- quap(
alist(
weight_std ~ dnorm(mu, sigma),
mu <- a + b*groupsize_std,
a ~ dnorm( 0 , 0.5 ) ,
b ~ dnorm( 0 , 0.5 ) ,
sigma ~ dexp( 1 )
) , data = foxes )
# plotting body weight ~ area size
x_seq <- seq( from=-3 , to=3.2 , length.out=30 )
mu <- link( body_area_model , data=list(area_std = x_seq) )
mu.mean <- apply( mu , 2, mean )
mu.PI <- apply( mu , 2 , PI )
plot( weight_std ~ area_std , data=foxes , col=rangi2 )
lines( x_seq , mu.mean ,lwd=2 )
shade( mu.PI , x_seq )
# plotting body weight ~ area size
x_seq <- seq( from=-3 , to=3.2 , length.out=30 )
mu <- link( body_grsize_model , data=list(groupsize_std = x_seq) )
mu.mean <- apply( mu , 2, mean )
mu.PI <- apply( mu , 2 , PI )
plot( weight_std ~ groupsize_std , data=foxes , col=rangi2 )
lines( x_seq , mu.mean ,lwd=2 )
shade( mu.PI , x_seq )
body_area_model <- quap(
alist(
weight_std ~ dnorm(mu, sigma),
mu <- a + b*area_std,
a ~ dnorm( 0 , 0.5 ) ,
b ~ dnorm( 0 , 0.5 ) ,
sigma ~ dexp( 1 )
) , data = foxes )
body_grsize_model <- quap(
alist(
weight_std ~ dnorm(mu, sigma),
mu <- a + b*groupsize_std,
a ~ dnorm( 0 , 0.5 ) ,
b ~ dnorm( 0 , 0.5 ) ,
sigma ~ dexp( 1 )
) , data = foxes )
# plotting body weight ~ area size
x_seq <- seq( from=-3 , to=3.2 , length.out=30 )
mu <- link( body_area_model , data=list(area_std = x_seq) )
mu.mean <- apply( mu , 2, mean )
mu.PI <- apply( mu , 2 , PI )
plot( weight_std ~ area_std , data=foxes , col=rangi2 )
lines( x_seq , mu.mean ,lwd=2 )
shade( mu.PI , x_seq )
?PI
# plotting body weight ~ area size
x_seq <- seq( from=-3 , to=3.2 , length.out=30 )
mu <- link( body_grsize_model , data=list(groupsize_std = x_seq) )
mu.mean <- apply( mu , 2, mean )
mu.PI <- apply( mu , 2 , PI(prob = 0.95) )
# plotting body weight ~ area size
x_seq <- seq( from=-3 , to=3.2 , length.out=30 )
mu <- link( body_grsize_model , data=list(groupsize_std = x_seq) )
mu.mean <- apply( mu , 2, mean )
mu.PI <- apply( mu , 2 , PI(.,prob = 0.95) )
# plotting body weight ~ area size
x_seq <- seq( from=-3 , to=3.2 , length.out=30 )
mu <- link( body_grsize_model , data=list(groupsize_std = x_seq) )
mu.mean <- apply( mu , 2, mean )
mu.PI <- apply( mu , 2 , PI(.x,prob = 0.95) )
# plotting body weight ~ area size
x_seq <- seq( from=-3 , to=3.2 , length.out=30 )
mu <- link( body_grsize_model , data=list(groupsize_std = x_seq) )
mu.mean <- apply( mu , 2, mean )
mu.PI <- apply( mu , 2 , PI(prob = 0.95) )
# plotting body weight ~ area size
x_seq <- seq( from=-3 , to=3.2 , length.out=30 )
mu <- link( body_grsize_model , data=list(groupsize_std = x_seq) )
mu.mean <- apply( mu , 2, mean )
mu.PI <- apply( mu , 2 , PI )
plot( weight_std ~ groupsize_std , data=foxes , col=rangi2 )
lines( x_seq , mu.mean ,lwd=2 )
shade( mu.PI , x_seq )
precis(body_grsize_model)
body_area_grsize_model <- quap(
alist(
weight_std ~ dnorm(mu, sigma),
mu <- a + b_a*area_std + b_size*groupsize_std,
a ~ dnorm( 0 , 0.5 ) ,
b_a ~ dnorm( 0 , 0.5 ) ,
b_size ~ dnorm( 0 , 0.5 ) ,
sigma ~ dexp( 1 )
) , data = foxes )
# firstly, plotting body weight ~ area size
x_seq <- seq( from=-3 , to=3.2 , length.out=30 )
mu <- link( body_area_grsize_model , data=list(area_std = x_seq) )
body_area_grsize_model <- quap(
alist(
weight_std ~ dnorm(mu, sigma),
mu <- a + b_a*area_std + b_size*groupsize_std,
a ~ dnorm( 0 , 0.5 ) ,
b_a ~ dnorm( 0 , 0.5 ) ,
b_size ~ dnorm( 0 , 0.5 ) ,
sigma ~ dexp( 1 )
) , data = foxes )
# firstly, plotting body weight ~ area size. we try to keep group size constant
x_seq <- seq( from=-3 , to=3.2 , length.out=30 )
# prep data
sim_dat <- data.frame( area_std = x_seq )
# simulate group size and then weight, using x_seq
s <- sim( body_area_grsize_model , data=sim_dat , vars=c("groupsize_std","weight_std") )
# display counterfactual predictions
plot( sim_dat$area_std , colMeans(s$weight_std) , ylim=c(-2,2) , type="l" ,
xlab="manipulated Area" , ylab="counterfactual weight"  )
shade( apply(s$weight_std,2,PI) , sim_dat$area_std )
mtext( "Total counterfactual effect of Area size on Body weight" )
body_area_grsize_model <- quap(
alist(
weight_std ~ dnorm(mu, sigma),
mu <- a + b_a*area_std + b_size*groupsize_std,
a ~ dnorm( 0 , 0.5 ) ,
b_a ~ dnorm( 0 , 0.5 ) ,
b_size ~ dnorm( 0 , 0.5 ) ,
sigma ~ dexp( 1 )
) , data = foxes )
# firstly, plotting body weight ~ area size. we try to keep group size constant
x_seq <- seq( from=-3 , to=3.2 , length.out=30 )
# prep data
sim_dat <- data.frame( area_std = x_seq )
# simulate group size and then weight, using x_seq
s <- sim( body_area_grsize_model , data=sim_dat , vars=c("groupsize_std","weight_std") )
# display counterfactual predictions
plot( sim_dat$area_std , colMeans(s$weight_std) , ylim=c(-2,2) , type="l" ,
xlab="manipulated Area size" , ylab="counterfactual body weight"  )
shade( apply(s$weight_std,2,PI) , sim_dat$area_std )
mtext( "Total counterfactual effect of Area size on Body weight" )
sim_dat <- data.frame( groupsize_std = x_seq )
# simulate group size and then weight, using x_seq
s <- sim( body_area_grsize_model , data=sim_dat , vars=c("area_std","weight_std") )
# display counterfactual predictions
plot( sim_dat$groupsize_std , colMeans(s$weight_std) , ylim=c(-2,2) , type="l" ,
xlab="manipulated group size" , ylab="counterfactual body weight"  )
shade( apply(s$weight_std,2,PI) , sim_dat$groupsize_std )
mtext( "Total counterfactual effect of group size on Body weight" )
body_area_model <- quap(
alist(
weight_std ~ dnorm(mu, sigma),
mu <- a + b_a*area_std,
a ~ dnorm( 0 , 0.5 ) ,
b_a ~ dnorm( 0 , 0.5 ) ,
sigma ~ dexp( 1 )
) , data = foxes )
body_grsize_model <- quap(
alist(
weight_std ~ dnorm(mu, sigma),
mu <- a + b_size*groupsize_std,
a ~ dnorm( 0 , 0.5 ) ,
b_size ~ dnorm( 0 , 0.5 ) ,
sigma ~ dexp( 1 )
) , data = foxes )
# plotting body weight ~ area size
x_seq <- seq( from=-3 , to=3.2 , length.out=30 )
mu <- link( body_area_model , data=list(area_std = x_seq) )
mu.mean <- apply( mu , 2, mean )
mu.PI <- apply( mu , 2 , PI )
plot( weight_std ~ area_std , data=foxes , col=rangi2 )
lines( x_seq , mu.mean ,lwd=2 )
shade( mu.PI , x_seq )
plot( coeftab(body_area_model,body_grsize_model,body_area_grsize_model), par=c("b_a","b_size") )
plot( coeftab(body_area_model,body_grsize_model,body_area_grsize_model), par=c("b_a","b_size") )
precis(body_area_grsize_model)
precis(body_area_grsize_model, depth = 2)
precis(body_area_grsize_model, depth = 2) %>%
View
# First model: weight ~ avgfood + groupsize
body_food_grsize_model <- quap(
alist(
weight_std ~ dnorm(mu, sigma),
mu <- a + b_food*avgfood_std + b_size*groupsize_std,
a ~ dnorm( 0 , 0.5 ) ,
# b_a ~ dnorm( 0 , 0.5 ) ,
b_food ~ dnorm( 0 , 0.5 ) ,
b_size ~ dnorm( 0 , 0.5 ) ,
sigma ~ dexp( 1 )
) , data = foxes )
# Second model: weight ~ avgfood + groupsize + area
body_food_grsize_area_model <- quap(
alist(
weight_std ~ dnorm(mu, sigma),
mu <- a + b_food*avgfood_std + b_size*groupsize_std +  b_a*area_std,
a ~ dnorm( 0 , 0.5 ) ,
b_a ~ dnorm( 0 , 0.5 ) ,
b_food ~ dnorm( 0 , 0.5 ) ,
b_size ~ dnorm( 0 , 0.5 ) ,
sigma ~ dexp( 1 )
) , data = foxes )
plot( coeftab(body_area_model,
body_grsize_model,
body_area_grsize_model,
body_food_grsize_model,
body_food_grsize_area_model
), par=c("b_a","b_size", "b_food") )
plot(avgfood, area, data = foxes)
plot(x = avgfood, y= area, data = foxes)
?plot
plot(x = foxes$avgfood, y = foxes$area)
cov(x = foxes$avgfood, y = foxes$area)
vcov(x = foxes$avgfood, y = foxes$area)
cov(x = foxes$avgfood, y = foxes$area)
precis(body_food_grsize_area_model)
precis(body_food_grsize_area_model) %>%
View
# The model: body_food_grsize_area_model
# Firstly, plotting body weight ~ area size. we try to keep group size and food constant constant
x_seq <- seq( from=-3 , to=3.2 , length.out=30 )
# prep data
sim_dat <- data.frame( area_std = x_seq )
# simulate group size and then weight, using x_seq
s <- sim( body_area_grsize_model , data=sim_dat , vars=c("groupsize_std","weight_std", "avgfood_std") )
# display counterfactual predictions
plot( sim_dat$area_std , colMeans(s$weight_std) , ylim=c(-2,2) , type="l" ,
xlab="manipulated Area size" , ylab="counterfactual body weight"  )
shade( apply(s$weight_std,2,PI) , sim_dat$area_std )
mtext( "Total counterfactual effect of Area size on Body weight" )
# The model: body_food_grsize_area_model
# Firstly, plotting body weight ~ area size. we try to keep group size and food constant constant
x_seq <- seq( from=-3 , to=3.2 , length.out=30 )
# prep data
sim_dat <- data.frame( area_std = x_seq )
# simulate group size and then weight, using x_seq
s <- sim( body_area_grsize_model , data=sim_dat , vars=c("groupsize_std","weight_std", "avgfood_std") )
# display counterfactual predictions
plot( sim_dat$area_std , colMeans(s$weight_std) , ylim=c(-3,3) , type="l" ,
xlab="manipulated Area size" , ylab="counterfactual body weight"  )
shade( apply(s$weight_std,2,PI) , sim_dat$area_std )
mtext( "Total counterfactual effect of Area size on Body weight" )
# The model: body_food_grsize_area_model
# Firstly, plotting body weight ~ area size. we try to keep group size and food constant constant
x_seq <- seq( from=-3 , to=3.2 , length.out=30 )
# prep data
sim_dat <- data.frame( area_std = x_seq )
# simulate group size and then weight, using x_seq
s <- sim( body_area_grsize_model , data=sim_dat , vars=c("groupsize_std","weight_std", "avgfood_std") )
# display counterfactual predictions
plot( sim_dat$area_std , colMeans(s$weight_std) , ylim=c(-4,4) , type="l" ,
xlab="manipulated Area size" , ylab="counterfactual body weight"  )
shade( apply(s$weight_std,2,PI) , sim_dat$area_std )
mtext( "Total counterfactual effect of Area size on Body weight" )
# The model: body_food_grsize_area_model
# Firstly, plotting body weight ~ area size. we try to keep group size and food constant constant
x_seq <- seq( from=-3 , to=3.2 , length.out=30 )
# prep data
sim_dat <- data.frame( area_std = x_seq )
# simulate group size and then weight, using x_seq
s <- sim( body_area_grsize_model , data=sim_dat , vars=c("groupsize_std","weight_std", "avgfood_std") )
# display counterfactual predictions
plot( sim_dat$area_std , colMeans(s$weight_std) , ylim=c(-4,4) , type="l" ,
xlab="manipulated Area size" , ylab="counterfactual body weight"  )
shade( apply(s$weight_std,2,PI) , sim_dat$area_std )
mtext( "Total counterfactual effect of Area size on Body weight (constant = food, group size)" )
# The model: body_food_grsize_area_model
# Firstly, plotting body weight ~ area size. we try to keep group size and area constant constant
x_seq <- seq( from=-3 , to=3.2 , length.out=30 )
# prep data
sim_dat <- data.frame( avgfood_std = x_seq )
# simulate group size and then weight, using x_seq
s <- sim( body_area_grsize_model , data=sim_dat , vars=c("groupsize_std","weight_std", "area_std") )
# display counterfactual predictions
plot( sim_dat$avgfood_std , colMeans(s$weight_std) , ylim=c(-4,4) , type="l" ,
xlab="manipulated average food available" , ylab="counterfactual body weight"  )
shade( apply(s$weight_std,2,PI) , sim_dat$avgfood_std )
mtext( "Total counterfactual effect of Area size on Body weight (constant = area, group size)" )
plot( coeftab(body_area_model,
body_grsize_model,
body_area_grsize_model,
body_food_grsize_model,
body_food_grsize_area_model
), par=c("b_a","b_size", "b_food") )
-0.68+0.24
data("milk")
d <- milk
pairs( ~ kcal.per.g + perc.fat + perc.lactose , data=d , col=rangi2 )
data("milk")
d <- milk
pairs( ~ kcal.per.g + perc.fat + perc.lactose , data=d , col=rangi2 )
library(rethinking)
data(milk)
d <- milk
sim.coll <- function( r=0.9 ) {
d$x <- rnorm( nrow(d) ,
mean=r*d$perc.fat ,
sd=sqrt( (1-r^2)*var(d$perc.fat) ) )
m <- lm( kcal.per.g ~ perc.fat + x , data=d )
sqrt( diag( vcov(m) ) )[2] # stddev of parameter
}
rep.sim.coll <- function( r=0.9 , n=100 ) {
stddev <- replicate( n , sim.coll(r) ) mean(stddev)
library(rethinking)
data(milk)
d <- milk
sim.coll <- function( r=0.9 ) {
d$x <- rnorm( nrow(d) ,
mean=r*d$perc.fat ,
sd=sqrt( (1-r^2)*var(d$perc.fat) ) )
m <- lm( kcal.per.g ~ perc.fat + x , data=d )
sqrt( diag( vcov(m) ) )[2] # stddev of parameter
}
rep.sim.coll <- function( r=0.9 , n=100 ) {
stddev <- replicate( n , sim.coll(r) )
mean(stddev)
}
r.seq <- seq(from=0,to=0.99,by=0.01)
stddev <- sapply( r.seq , function(z) rep.sim.coll(r=z,n=100) )
plot( stddev ~ r.seq , type="l" , col=rangi2, lwd=2 , xlab="correlation" )
exp(0.25)
exp(0)
dlnorm(100, 0, 0.25)
hist(dlnorm(1e4, 0, 0.25))
# simulate prior
sim_p <- rlnorm( 1e4 , 0 , 0.25 )
precis( data.frame(sim_p) )
hist(exp(simp))
hist(exp(sim_p))
mean(exp(sim_p))
median(exp(sim_p))
stats(exp(sim_p))
summary(exp(sim_p))
summary(exp(sim_p))
# simulate prior
sim_p <- rlnorm( 1e4 , 0 , 0.25 )
precis( data.frame(sim_p) )
hist(sim_p)
m6.6 <- quap(
alist(
h1 ~ dnorm( mu , sigma ),
mu <- h0*p,
p ~ dlnorm( 0 , 0.25 ),
sigma ~ dexp( 1 ) ), data=d )
View(d)
set.seed(71)
# number of plants
N <- 100
# simulate initial heights
h0 <- rnorm(N,10,2)
# assign treatments and simulate fungus and growth
treatment <- rep( 0:1 , each=N/2 )
fungus <- rbinom( N , size=1 , prob=0.5 - treatment*0.4 )
h1 <- h0 + rnorm(N, 5 - 3*fungus)
# compose a clean data frame
d <- data.frame( h0=h0 , h1=h1 , treatment=treatment , fungus=fungus )
precis(d)
m6.6 <- quap(
alist(
h1 ~ dnorm( mu , sigma ),
mu <- h0*p,
p ~ dlnorm( 0 , 0.25 ),
sigma ~ dexp( 1 ) ), data=d )
precis(m6.6)
m6.7 <- quap(
alist(
h1 ~ dnorm( mu , sigma ),
mu <- h0 * p,
p <- a + bt*treatment + bf*fungus,
a ~ dlnorm( 0 , 0.2 ) ,
bt ~ dnorm( 0 , 0.5 ),
bf ~ dnorm( 0 , 0.5 ),
sigma ~ dexp( 1 ) ), data=d )
precis(m6.7)
m6.8 <- quap(
alist(
h1 ~ dnorm( mu , sigma ),
mu <- h0 * p,
p <- a + bt*treatment,
a ~ dlnorm( 0 , 0.2 ),
bt ~ dnorm( 0 , 0.5 ),
sigma ~ dexp( 1 ) ), data=d )
precis(m6.8)
m6.8 <- quap(
alist(
h1 ~ dnorm( mu , sigma ),
mu <- h0 * p,
p <- a + bt*treatment,
a ~ dlnorm( 0 , 0.2 ),
bt ~ dnorm( 0 , 0.5 ),
sigma ~ dexp( 1 ) ), data=d )
precis(m6.8)
library(dagitty)
plant_dag <- dagitty( "dag { H_0 -> H_1 F -> H_1 T -> F }")
coordinates( plant_dag ) <- list( x=c(H_0=0,T=2,F=1.5,H_1=1) , y=c(H_0=0,T=0,F=0,H_1=0) )
drawdag( plant_dag )
library(dagitty)
plant_dag <- dagitty( "dag { H_0 -> H_1 F -> H_1 T -> F }")
coordinates( plant_dag ) <- list( x=c(H_0=0,T=2,F=1.5,H_1=1) , y=c(H_0=0,T=0,F=0,H_1=0) )
drawdag( plant_dag )
impliedConditionalIndependencies(plant_dag)
set.seed(71)
N <- 1000
h0 <- rnorm(N,10,2)
treatment <- rep( 0:1 , each=N/2 )
M <- rbern(N)
fungus <- rbinom( N , size=1 , prob=0.5 - treatment*0.4 + 0.4*M )
h1 <- h0 + rnorm( N , 5 + 3*M )
d2 <- data.frame( h0=h0 , h1=h1 , treatment=treatment , fungus=fungus )
set.seed(71)
N <- 1000
h0 <- rnorm(N,10,2)
treatment <- rep( 0:1 , each=N/2 )
M <- rbern(N)
fungus <- rbinom( N , size=1 , prob=0.5 - treatment*0.4 + 0.4*M )
h1 <- h0 + rnorm( N , 5 + 3*M )
d2 <- data.frame( h0=h0 , h1=h1 , treatment=treatment , fungus=fungus )
m6.7 <- quap(
alist(
h1 ~ dnorm( mu , sigma ),
mu <- h0 * p,
p <- a + bt*treatment + bf*fungus,
a ~ dlnorm( 0 , 0.2 ) ,
bt ~ dnorm( 0 , 0.5 ),
bf ~ dnorm( 0 , 0.5 ),
sigma ~ dexp( 1 ) ), data=d2 )
precis(m6.7)
m6.8 <- quap(
alist(
h1 ~ dnorm( mu , sigma ),
mu <- h0 * p,
p <- a + bt*treatment,
a ~ dlnorm( 0 , 0.2 ),
bt ~ dnorm( 0 , 0.5 ),
sigma ~ dexp( 1 ) ), data=d2 )
precis(m6.8)
?rbern
?rbernoulli
# producing dataset
N <- 200 # number of grandparent-parent-child triads
b_GP <- 1 # direct effect of G on P
b_GC <- 0 # direct effect of G on C
b_PC <- 1 # direct effect of P on C
b_U <- 2 # direct effect of U on P and C
set.seed(1) U <- 2*rbern( N , 0.5 ) - 1
# producing dataset
N <- 200 # number of grandparent-parent-child triads
b_GP <- 1 # direct effect of G on P
b_GC <- 0 # direct effect of G on C
b_PC <- 1 # direct effect of P on C
b_U <- 2 # direct effect of U on P and C
set.seed(1)
U <- 2*rbern( N , 0.5 ) - 1
G <- rnorm( N )
P <- rnorm( N , b_GP*G + b_U*U )
C <- rnorm( N , b_PC*P + b_GC*G + b_U*U )
d <- data.frame( C=C , P=P , G=G , U=U )
# the model, now with U
m6.12 <- quap(
alist( C ~ dnorm( mu , sigma ),
mu <- a + b_PC*P + b_GC*G + b_U*U,
a ~ dnorm( 0 , 1 ),
c(b_PC,b_GC,b_U) ~ dnorm( 0 , 1 ),
sigma ~ dexp( 1 ) ), data=d )
precis(m6.12)
library(dagitty)
dag_6.1 <- dagitty( "dag {
U [unobserved]
X -> Y
X <- U <- A -> C -> Y
U -> B <- C
}")
adjustmentSets( dag_6.1 , exposure="X" , outcome="Y" )
library(dagitty)
dag_6.2 <- dagitty( "dag {
A -> D
A -> M -> D
A <- S -> M
S -> W -> D }")
adjustmentSets( dag_6.2 , exposure="W" , outcome="D" )
impliedConditionalIndependencies( dag_6.2 )
