set.seed(71)
# number of plants
N <- 100
# simulate initial heights
h0 <- rnorm(N,10,2)
# assign treatments and simulate fungus and growth
treatment <- rep( 0:1 , each=N/2 )
fungus <- rbinom( N , size=1 , prob=0.5 - treatment*0.4 )
h1 <- h0 + rnorm(N, 5 - 3*fungus)
# compose a clean data frame
d <- data.frame( h0=h0 , h1=h1 , treatment=treatment , fungus=fungus )
precis(d)
# simulate prior
sim_p <- rlnorm( 1e4 , 0 , 0.25 )
precis( data.frame(sim_p) )
Sys.setlocale("LC_ALL", 'en_US.UTF-8')
set.seed(71)
# number of plants
N <- 100
# simulate initial heights
h0 <- rnorm(N,10,2)
# assign treatments and simulate fungus and growth
treatment <- rep( 0:1 , each=N/2 )
fungus <- rbinom( N , size=1 , prob=0.5 - treatment*0.4 )
h1 <- h0 + rnorm(N, 5 - 3*fungus)
# compose a clean data frame
d <- data.frame( h0=h0 , h1=h1 , treatment=treatment , fungus=fungus )
precis(d)
m6.8 <- quap(
alist(
h1 ~ dnorm( mu , sigma ),
mu <- h0 * p,
p <- a + bt*treatment,
a ~ dlnorm( 0 , 0.2 ),
bt ~ dnorm( 0 , 0.5 ),
sigma ~ dexp( 1 ) ), data=d )
precis(m6.8) %>%
View
m6.7 <- quap(
alist(
h1 ~ dnorm( mu , sigma ),
mu <- h0 * p,
p <- a + bt*treatment + bf*fungus,
a ~ dlnorm( 0 , 0.2 ) ,
bt ~ dnorm( 0 , 0.5 ),
bf ~ dnorm( 0 , 0.5 ),
sigma ~ dexp( 1 ) ), data=d )
precis(m6.7)
precis(m6.7) %>%
View
#| include: false
#| message: false
#| warning: false
#| results: hide
knitr::opts_chunk$set(echo = TRUE, dpi = 300)
library(rethinking)
library(magrittr)
library(tidyverse)
library(dagitty)
# add other packages you use here
dag_fork <- dagitty( "dag {
A <- B -> C
}")
drawdag( dag_fork )
dag_fork <- dagitty( "dag {
A <- B -> C
}")
drawdag( dag_fork )
dag_pipe <- dagitty( "dag {
A -> B -> C
}")
drawdag( dag_pipe )
dag_fork <- dagitty( "dag {
A <- B -> C
}")
coordinates( dag_fork ) <- list(
x=c(A=0,B=1,C=2) ,
y=c(A=0,B=0,C=0) )
drawdag( dag_fork )
dag_pipe <- dagitty( "dag {
A -> B -> C
}")
coordinates( dag_pipe ) <- list(
x=c(A=0,B=1,C=2) ,
y=c(A=0,B=0,C=0) )
drawdag( dag_pipe )
dag_collider <- dagitty( "dag {
A -> B <- C
}")
coordinates( dag_collider ) <- list(
x=c(A=0,B=1,C=2) ,
y=c(A=0,B=0,C=0) )
drawdag( dag_collider )
dag_desc<- dagitty( "dag {
A -> B <- C
B -> D
}")
coordinates( dag_desc ) <- list(
x=c(A=0,B=1,C=0, D=2) ,
y=c(A=0,B=0,C=-1, D=0) )
drawdag( dag_desc )
dag_desc<- dagitty( "dag {
A -> B <- C
B -> D
}")
coordinates( dag_desc ) <- list(
x=c(A=0,B=1,C=0, D=2) ,
y=c(A=0,B=-0.5,C=-1, D=0) )
drawdag( dag_desc )
dag_desc<- dagitty( "dag {
A -> B <- C
B -> D
}")
coordinates( dag_desc ) <- list(
x=c(A=0,B=1,C=0, D=2) ,
y=c(A=0,B=-0.5,C=-1, D=-0.5) )
drawdag( dag_desc )
dag_desc<- dagitty( "dag {
A -> B <- C
B -> D
}")
coordinates( dag_desc ) <- list(
x=c(A=0,B=1,C=1, D=2) ,
y=c(A=0,B=-0.5,C=-1, D=-0.5) )
drawdag( dag_desc )
dag_desc<- dagitty( "dag {
A -> B <- C
B -> D
}")
coordinates( dag_desc ) <- list(
x=c(A=0,B=1,C=1, D=2) ,
y=c(A=0,B=0,C=-1, D=0) )
drawdag( dag_desc )
dag_desc<- dagitty( "dag {
A -> B <- C
B -> D
}")
coordinates( dag_desc ) <- list(
x=c(A=0,B=1,C=1, D=2) ,
y=c(A=0,B=0,C=-0.02, D=0) )
drawdag( dag_desc )
dag_desc<- dagitty( "dag {
A -> B <- C
B -> D
}")
coordinates( dag_desc ) <- list(
x=c(A=0,B=1,C=1, D=2) ,
y=c(A=0,B=0,C=0.5, D=0) )
drawdag( dag_desc )
dag_desc<- dagitty( "dag {
A -> B <- C
B -> D
}")
coordinates( dag_desc ) <- list(
x=c(A=0,B=1,C=1, D=2) ,
y=c(A=0,B=0,C=0.5, D=0) )
drawdag( dag_desc )
dag_2roads <- dagitty( "dag {
U [unobserved]
V [unobserved]
X -> Y
X <- U <- A ->
C -> Y
U -> B <- C
C <- V -> Y
}")
drawdag(dag_2roads)
dag_2roads <- dagitty( "dag {
U [unobserved]
V [unobserved]
X -> Y
X <- U <- A ->
C -> Y
U -> B <- C
C <- V -> Y
}")
coordinates( dag_desc ) <- list(
x=c(A=1,B=1,X=1, Y=2, U=0, V=3) ,
y=c(A=1,B=0,X=1, Y=2, U=0, V=2) )
drawdag(dag_2roads)
dag_2roads <- dagitty( "dag {
U [unobserved]
V [unobserved]
X -> Y
X <- U <- A ->
C -> Y
U -> B <- C
C <- V -> Y
}")
coordinates( dag_desc ) <- list(
x=c(A=1,B=1,X=1, Y=2, U=0, V=3) ,
y=c(A=1,B=0,X=-1, Y=-1, U=0.5, V=-0.5) )
drawdag(dag_2roads)
dag_2roads <- dagitty( "dag {
U [unobserved]
V [unobserved]
X -> Y
X <- U <- A ->
C -> Y
U -> B <- C
C <- V -> Y
}")
coordinates( dag_2roads ) <- list(
x=c(A=1,B=1,X=1, Y=2, U=0, V=3) ,
y=c(A=1,B=0,X=-1, Y=-1, U=0.5, V=-0.5) )
drawdag(dag_2roads)
dag_2roads <- dagitty( "dag {
U [unobserved]
V [unobserved]
X -> Y
X <- U <- A ->
C -> Y
U -> B <- C
C <- V -> Y
}")
coordinates( dag_2roads ) <- list(
x=c(A=1,B=1,X=1, C=2, Y=2, U=0, V=3) ,
y=c(A=1,B=0,X=-1, C=2,Y=-1, U=0.5, V=-0.5) )
drawdag(dag_2roads)
dag_2roads <- dagitty( "dag {
U [unobserved]
V [unobserved]
X -> Y
X <- U <- A ->
C -> Y
U -> B <- C
C <- V -> Y
}")
coordinates( dag_2roads ) <- list(
x=c(A=1,B=1,X=1, C=2, Y=2, U=0, V=3) ,
y=c(A=1,B=0,X=1, C=2,Y=1, U=-0.5, V=0.5) )
drawdag(dag_2roads)
dag_2roads <- dagitty( "dag {
U [unobserved]
V [unobserved]
X -> Y
X <- U <- A ->
C -> Y
U -> B <- C
C <- V -> Y
}")
coordinates( dag_2roads ) <- list(
x=c(A=2,B=1,X=1, C=2, Y=2, U=0, V=3) ,
y=c(A=-1,B=0,X=1, C=2,Y=1, U=-0.5, V=0.5) )
drawdag(dag_2roads)
dag_2roads <- dagitty( "dag {
U [unobserved]
V [unobserved]
X -> Y
X <- U <- A ->
C -> Y
U -> B <- C
C <- V -> Y
}")
coordinates( dag_2roads ) <- list(
x=c(A=2,B=1,X=1, C=2, Y=2, U=0, V=3) ,
y=c(A=-1,B=0,X=1, C=0,Y=1, U=-0.5, V=0.5) )
drawdag(dag_2roads)
dag_2roads <- dagitty( "dag {
U [unobserved]
V [unobserved]
X -> Y
X <- U <- A ->
C -> Y
U -> B <- C
C <- V -> Y
}")
coordinates( dag_2roads ) <- list(
x=c(A=2,B=1,X=1, C=2, Y=2, U=0, V=3) ,
y=c(A=-1,B=1,X=1, C=0,Y=1, U=-0.5, V=0.5) )
drawdag(dag_2roads)
dag_2roads <- dagitty( "dag {
U [unobserved]
V [unobserved]
X -> Y
X <- U <- A ->
C -> Y
U -> B <- C
C <- V -> Y
}")
coordinates( dag_2roads ) <- list(
x=c(A=2,B=1,X=1, C=2, Y=2, U=0, V=3) ,
y=c(A=-1,B=0,X=1, C=0,Y=1, U=-0.5, V=0.5) )
drawdag(dag_2roads)
dag_2roads <- dagitty( "dag {
U [unobserved]
V [unobserved]
X -> Y
X <- U <- A ->
C -> Y
U -> B <- C
C <- V -> Y
}")
coordinates( dag_2roads ) <- list(
x=c(A=1,B=1,X=1, C=2, Y=2, U=0, V=3) ,
y=c(A=-1,B=0,X=1, C=0,Y=1, U=-0.5, V=0.5) )
drawdag(dag_2roads)
dag_2roads <- dagitty( "dag {
U [unobserved]
V [unobserved]
X -> Y
X <- U <- A ->
C -> Y
U -> B <- C
C <- V -> Y
}")
coordinates( dag_2roads ) <- list(
x=c(A=1,B=1,X=1, C=-0.5, Y=2, U=0, V=3) ,
y=c(A=-1,B=0,X=1, C=0,Y=1, U=-0.5, V=0.5) )
drawdag(dag_2roads)
dag_2roads <- dagitty( "dag {
U [unobserved]
V [unobserved]
X -> Y
X <- U <- A ->
C -> Y
U -> B <- C
C <- V -> Y
}")
coordinates( dag_2roads ) <- list(
x=c(A=1,B=1,X=1, C=2, Y=2, U=0, V=3) ,
y=c(A=-1,B=0,X=1, C=-0.5,Y=1, U=-0.5, V=0.5) )
drawdag(dag_2roads)
dag_2roads <- dagitty( "dag {
U [unobserved]
V [unobserved]
X -> Y
X <- U <- A ->
C -> Y
U -> B <- C
C <- V -> Y
}")
coordinates( dag_2roads ) <- list(
x=c(A=1,B=1,X=0, C=2, Y=2, U=0, V=3) ,
y=c(A=-1,B=0,X=1, C=-0.5,Y=1, U=-0.5, V=0.5) )
drawdag(dag_2roads)
dag_2roads <- dagitty( "dag {
U [unobserved]
V [unobserved]
X -> Y
X <- U <- A ->
C -> Y
U -> B <- C
C <- V -> Y
}")
coordinates( dag_2roads ) <- list(
x=c(A=1,B=1,X=0, C=2, Y=2, U=0, V=3) ,
y=c(A=-1,B=0,X=0.5, C=-0.5,Y=0.5, U=-0.5, V=0.25) )
drawdag(dag_2roads)
dag_2roads <- dagitty( "dag {
U [unobserved]
V [unobserved]
X -> Y
X <- U <- A ->
C -> Y
U -> B <- C
C <- V -> Y
}")
coordinates( dag_2roads ) <- list(
x=c(A=1,B=1,X=0, C=2, Y=2, U=0, V=2.5) ,
y=c(A=-1,B=0,X=0.5, C=-0.5,Y=0.5, U=-0.5, V=0.25) )
drawdag(dag_2roads)
dag_2roads <- dagitty( "dag {
U [unobserved]
V [unobserved]
X -> Y
X <- U <- A ->
C -> Y
U -> B <- C
C <- V -> Y
}")
coordinates( dag_2roads ) <- list(
x=c(A=1,B=1,X=0, C=2, Y=2, U=0, V=2.5) ,
y=c(A=-1,B=0,X=0.5, C=-0.5,Y=0.5, U=-0.5, V=0) )
drawdag(dag_2roads)
dag_2roads <- dagitty( "dag {
U [unobserved]
V [unobserved]
X -> Y
X <- U <- A -> C -> Y
U -> B <- C
C <- V -> Y
}")
coordinates( dag_2roads ) <- list(
x=c(A=1,B=1,X=0, C=2, Y=2, U=0, V=2.5) ,
y=c(A=-1,B=0,X=0.5, C=-0.5,Y=0.5, U=-0.5, V=0) )
drawdag(dag_2roads)
adjustmentSets( dag_2roads , exposure="X" , outcome="Y" )
#| include: false
#| message: false
#| warning: false
#| results: hide
knitr::opts_chunk$set(echo = TRUE, dpi = 300)
library(rethinking)
library(magrittr)
library(tidyverse)
library(dagitty)
# add other packages you use here
dag1 <- dagitty("dag{
X <- Z <- A -> Y <- X
Y <- Z
}")
adjustmentSets(dag1, exposure = "X", outcome = "Y")
dag_upperR <- dagitty("dag{
X -> Z <- A -> Y <- X
Y <- Z
}")
adjustmentSets(dag_upperR, exposure = "X", outcome = "Y")
dag_upperR <- dagitty("dag{
X -> Z <- A -> Y <- X
Y <- Z
}")
adjustmentSets(dag_upperR, exposure = "X", outcome = "Y")
dag_lowerL <- dagitty("dag{
X -> Y
X -> Z <- Y
X <- A -> Z <- Y
}")
adjustmentSets(dag_lowerL, exposure = "X", outcome = "Y")
dag_lowerR <- dagitty("dag{
X -> Y
X -> Z ->  Y
X <- A -> Z ->  Y
}")
adjustmentSets(dag_lowerR, exposure = "X", outcome = "Y")
dag_upperL <- dagitty("dag{
X <- Z <- A -> Y <- X
Y <- Z
}")
adjustmentSets(dag_upperL, exposure = "X", outcome = "Y")
set.seed(77)
compare( m6.6 , m6.7 , m6.8 )
library(rethinking)
library(magrittr)
library(tidyverse)
library(dagitty)
Sys.setlocale("LC_ALL", 'en_US.UTF-8')
library(rethinking)
library(magrittr)
library(tidyverse)
library(dagitty)
Sys.setlocale("LC_ALL", 'en_US.UTF-8')
set.seed(11)
WAIC( m6.7 )
set.seed(77)
compare( m6.6 , m6.7 , m6.8 )
set.seed(11)
waic_m6.7 <- WAIC( m6.7 , pointwise=TRUE )
waic_m6.8 <- WAIC( m6.8 , pointwise=TRUE )
n <- length(waic_m6.6)
set.seed(11)
waic_m6.6 <- WAIC( m6.6 , pointwise=TRUE )
waic_m6.7 <- WAIC( m6.7 , pointwise=TRUE )
waic_m6.8 <- WAIC( m6.8 , pointwise=TRUE )
n <- length(waic_m6.6)
diff_m6.7_m6.8 <- waic_m6.7 - waic_m6.8
set.seed(11)
waic_m6.6 <- WAIC( m6.6 , pointwise=TRUE )
waic_m6.7 <- WAIC( m6.7 , pointwise=TRUE )
waic_m6.8 <- WAIC( m6.8 , pointwise=TRUE )
n <- length(waic_m6.6)
waic_m6.7 - waic_m6.8
plot( compare( m6.6 , m6.7 , m6.8 ) )
# not sure what this code wants to show...
set.seed(11)
waic_m6.6 <- WAIC( m6.6 , pointwise=TRUE )
waic_m6.7 <- WAIC( m6.7 , pointwise=TRUE )
waic_m6.8 <- WAIC( m6.8 , pointwise=TRUE )
n <- length(waic_m6.6)
# waic_m6.7 - waic_m6.8
set.seed(11)
waic_m6.6 <- WAIC( m6.6 , pointwise=TRUE )
diff_m6.6_m6.8 <- waic_m6.6 - waic_m6.8
sqrt( n*var( diff_m6.6_m6.8 ) )
set.seed(92)
waic_m6.6 <- WAIC( m6.6 , pointwise=TRUE )
diff_m6.6_m6.8 <- waic_m6.6 - waic_m6.8
sqrt( n*var( diff_m6.6_m6.8 ) )
compare(m5.1, m5.2, m5.3, func = PSIS)
#| include: false
#| message: false
#| warning: false
#| results: hide
knitr::opts_chunk$set(echo = TRUE, dpi = 300)
library(rethinking)
library(magrittr)
library(tidyverse)
library(dagitty)
Sys.setlocale("LC_ALL", 'en_US.UTF-8')
# add other packages you use here
-sum(p * log(p))
# Entropy = H(p) = -(p1*log(p1)+p2*log(p2))
p_coin <- c(0.7, 0.3)
-sum(p_coin * log(p_coin))
p_die <- c(0.2, 0.25, 0.25, 0.3)
-sum(p_die * log(p_die))
p_die <- c(0.2, 0.25, 0.25, 0)
-sum(p_die * log(p_die))
p_die <- c(1/3, 1/3, 1/3, 0)
-sum(p_die * log(p_die))
p_die <- c(1/3, 1/3, 1/3, 0)
-sum(p_die * log(p_die))
p_die <- c(1/3, 1/3, 1/3)
-sum(p_die * log(p_die))
log(0)
-inf*0
0*log(0)
-sum(p_die * log(p_die), na.rm = T)
p_die <- c(1/3, 1/3, 1/3, 0)
-sum(p_die * log(p_die), na.rm = T)
p_die <- c(1/3, 1/3, 1/3)
-sum(p_die * log(p_die))
