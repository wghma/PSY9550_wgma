shade( p_ci_sim , 1:2,  col = alpha(colors[i], 0.5) )
}
plot( propsurv ~ pred , data=d ,
xlab = "predator. 1 = no, 2 = yes", ylab= "proportion survival",
main = "variations among ponds")
axis(1, at = 1:2, labels = c("no predators near pond", "predators present"))
plot_lines <- sapply(1:length(model_list), function(i) draw_extract(i))
model_list[]
model_list[1]
# write function that extract samples = post, calculate a_sim, then into p_raw, then into p_mu, p_ci, which draws them
# loop over the models in a list
model_list <- list( m13.m1_pred, m13.m1_pred_size, m13.m1_pred_size_interact)
colors <- rainbow(length(model_list))
draw_extract <- function(model) {
post <- extract.samples(model_list[model])
post$a_sim <- rnorm( length(post$a_bar) , post$a_bar , post$sigma_a )
p_raw_sim <- sapply(1:2, function(i) p_link_asim(i))
p_mu_sim <- apply(p_raw_sim, 2, mean)
p_ci_sim <- apply(p_raw_sim, 2, PI)
lines( 1:2, p_mu_sim , lwd=2, col = colors[i])
shade( p_ci_sim , 1:2,  col = alpha(colors[i], 0.5) )
}
plot( propsurv ~ pred , data=d ,
xlab = "predator. 1 = no, 2 = yes", ylab= "proportion survival",
main = "variations among ponds")
axis(1, at = 1:2, labels = c("no predators near pond", "predators present"))
plot_lines <- sapply(1:length(model_list), function(i) draw_extract(i))
View(model_list)
post_abc <- extract.samples(model_list[1])
post_abc <- extract.samples(model_list[[1]])
# write function that extract samples = post, calculate a_sim, then into p_raw, then into p_mu, p_ci, which draws them
# loop over the models in a list
model_list <- list( m13.m1_pred, m13.m1_pred_size, m13.m1_pred_size_interact)
colors <- rainbow(length(model_list))
draw_extract <- function(i) {
post <- extract.samples(model_list[[i]])
post$a_sim <- rnorm( length(post$a_bar) , post$a_bar , post$sigma_a )
p_raw_sim <- sapply(1:2, function(i) p_link_asim(i))
p_mu_sim <- apply(p_raw_sim, 2, mean)
p_ci_sim <- apply(p_raw_sim, 2, PI)
lines( 1:2, p_mu_sim , lwd=2, col = colors[i])
shade( p_ci_sim , 1:2,  col = alpha(colors[i], 0.5) )
}
plot( propsurv ~ pred , data=d ,
xlab = "predator. 1 = no, 2 = yes", ylab= "proportion survival",
main = "variations among ponds")
axis(1, at = 1:2, labels = c("no predators near pond", "predators present"))
plot_lines <- sapply(1:length(model_list), function(i) draw_extract(i))
draw_extract(2)
extract.samples(m13.m1_pred_size)
post <- extract.samples(m13.m1_pred)
post$a_sim <- rnorm( length(post$a_bar) , post$a_bar , post$sigma_a )
# as to catch the variation in ponds that we made room for in the model by defining sigma_a, we simulate ponds (see line above) based on a_bar and sigma_a.
p_link_asim <- function( pred ) {
logodds <- post$a_sim + post$b_pred[,pred]
return( inv_logit(logodds) )
}
p_raw_sim <- sapply(1:2, function(i) p_link_asim(i))
p_mu_sim <- apply(p_raw_sim, 2, mean)
p_ci_sim <- apply(p_raw_sim, 2, PI)
plot( propsurv ~ pred , data=d ,
xlab = "predator. 1 = no, 2 = yes", ylab= "proportion survival",
main = "variations among ponds")
axis(1, at = 1:2, labels = c("no predators near pond", "predators present"))
lines( 1:2, p_mu_sim , lwd=2, col = "lightblue" )
shade( p_ci_sim , 1:2,  col = alpha("lightblue", 0.5) )
par(mfrow = c(1, length(model_list)))
plot( propsurv ~ pred , data=d ,
xlab = "predator. 1 = no, 2 = yes", ylab= "proportion survival",
main = "variations among ponds")
axis(1, at = 1:2, labels = c("no predators near pond", "predators present"))
plot_lines <- sapply(1:length(model_list), function(i) draw_extract(i))
length(model_list)
View(m13.m1_pred_size)
post <- extract.samples(m13.m1_pred_size)
View(post)
ifelse(any(unlist(post) %in% "b_size")
)
ifelse(any(unlist(post) %in% "b_size"))
any(unlist(post) %in% "b_size")
any(post %in% "b_size")
any("b_size" %in% post)
any("b_size" %in% unlist(post))
"b_size" %in% post
list("b_size") %in% post
post %in% list("b_size")
list("b_size") %in% post
post %in% list("b_size")
b_size %in% post
unlist(post)
post$b_size > 0
coeftab(m13.m1_0, m13.m1_pred, m13.m1_size, m13.m1_pred_size, m13.m1_pred_size_interact)
# write function that extract samples = post, calculate a_sim, then into p_raw, then into p_mu, p_ci, which draws them
# loop over the models in a list
model_list <- list( m13.m1_pred, m13.m1_pred_size, m13.m1_pred_size_interact)
colors <- rainbow(length(model_list))
# we set size to 1, to keep it constant...no, that makes the calculations of p skewed to only small or big tadpoles.
# different models, different linear models?? // WINNIE HERE. not sure...
# p_link_asim_size <- function( pred, size = 1) {
#   logodds <- post$a_sim + post$b_pred[,pred] + post$b_size[, size]
#   return( inv_logit(logodds) )
# }
draw_extract <- function(i) {
post <- extract.samples(model_list[[i]])
post$a_sim <- rnorm( length(post$a_bar) , post$a_bar , post$sigma_a )
p_raw_sim <- sapply(1:2, function(i) p_link_asim(i))
p_mu_sim <- apply(p_raw_sim, 2, mean)
p_ci_sim <- apply(p_raw_sim, 2, PI)
lines( 1:2, p_mu_sim , lwd=2, col = colors[i])
shade( p_ci_sim , 1:2,  col = alpha(colors[i], 0.5) )
}
par(mfrow = c(1, length(model_list)))
plot( propsurv ~ pred , data=d ,
xlab = "predator. 1 = no, 2 = yes", ylab= "proportion survival",
main = "variations among ponds")
axis(1, at = 1:2, labels = c("no predators near pond", "predators present"))
plot_lines <- sapply(1:length(model_list), function(i) draw_extract(i))
post$a_sim <- rnorm( length(post$a_bar) , post$a_bar , post$sigma_a )
# as to catch the variation in ponds that we made room for in the model by defining sigma_a, we simulate ponds (see line above) based on a_bar and sigma_a.
p_link_asim <- function( pred ) {
logodds <- post$a_sim + post$b_pred[,pred]
return( inv_logit(logodds) )
}
p_raw_sim <- sapply(1:2, function(i) p_link_asim(i))
p_mu_sim <- apply(p_raw_sim, 2, mean)
p_ci_sim <- apply(p_raw_sim, 2, PI)
plot( propsurv ~ pred , data=d ,
xlab = "predator. 1 = no, 2 = yes", ylab= "proportion survival",
main = "variations among ponds")
axis(1, at = 1:2, labels = c("no predators near pond", "predators present"))
lines( 1:2, p_mu_sim , lwd=2, col = "lightblue" )
shade( p_ci_sim , 1:2,  col = alpha("lightblue", 0.5) )
post <- extract.samples(m13.m1_pred) # 2000 samples
# p_link <- function( pred, tank = 1) {
#   logodds <- post$a[,tank] + post$b_pred[,pred]
#   return(inv_logit(logodds))
# }
p_link_abar <- function( pred ) {
logodds <- post$a_bar + post$b_pred[,pred]
return( inv_logit(logodds) )
}
# 1:2 for pred. Look into tank 45.
p_raw <- sapply(1:2, function(i) p_link_abar(i))
p_mu <- apply(p_raw, 2, mean)
p_ci <- apply(p_raw, 2, PI)
# density_seq <- seq(0, max(d$density)+10, length.out = 3000)
plot( propsurv ~ pred , data=d ,
xlab = "predator. 1 = no, 2 = yes", ylab= "proportion survival",
main = "average pond")
axis(1, at = 1:2, labels = c("no predators near pond", "predators present"))
lines( 1:2, p_mu , lwd=2, col = "blue" )
shade( p_ci , 1:2,  col = alpha("blue", 0.5) )
post$a_sim <- rnorm( length(post$a_bar) , post$a_bar , post$sigma_a )
# as to catch the variation in ponds that we made room for in the model by defining sigma_a, we simulate ponds (see line above) based on a_bar and sigma_a.
p_link_asim <- function( pred ) {
logodds <- post$a_sim + post$b_pred[,pred]
return( inv_logit(logodds) )
}
p_raw_sim <- sapply(1:2, function(i) p_link_asim(i))
p_mu_sim <- apply(p_raw_sim, 2, mean)
p_ci_sim <- apply(p_raw_sim, 2, PI)
plot( propsurv ~ pred , data=d ,
xlab = "predator. 1 = no, 2 = yes", ylab= "proportion survival",
main = "variations among ponds")
axis(1, at = 1:2, labels = c("no predators near pond", "predators present"))
lines( 1:2, p_mu_sim , lwd=2, col = "lightblue" )
shade( p_ci_sim , 1:2,  col = alpha("lightblue", 0.5) )
# write function that extract samples = post, calculate a_sim, then into p_raw, then into p_mu, p_ci, which draws them
# loop over the models in a list
model_list <- list( m13.m1_pred, m13.m1_pred_size, m13.m1_pred_size_interact)
colors <- rainbow(length(model_list))
# we set size to 1, to keep it constant...no, that makes the calculations of p skewed to only small or big tadpoles.
# different models, different linear models?? // WINNIE HERE. not sure...
# p_link_asim_size <- function( pred, size = 1) {
#   logodds <- post$a_sim + post$b_pred[,pred] + post$b_size[, size]
#   return( inv_logit(logodds) )
# }
draw_extract <- function(i) {
post <- extract.samples(model_list[[i]])
post$a_sim <- rnorm( length(post$a_bar) , post$a_bar , post$sigma_a )
p_raw_sim <- sapply(1:2, function(i) p_link_asim(i))
p_mu_sim <- apply(p_raw_sim, 2, mean)
p_ci_sim <- apply(p_raw_sim, 2, PI)
lines( 1:2, p_mu_sim , lwd=2, col = colors[i])
shade( p_ci_sim , 1:2,  col = alpha(colors[i], 0.5) )
}
par(mfrow = c(1, length(model_list)))
plot( propsurv ~ pred , data=d ,
xlab = "predator. 1 = no, 2 = yes", ylab= "proportion survival",
main = "variations among ponds")
axis(1, at = 1:2, labels = c("no predators near pond", "predators present"))
plot_lines <- sapply(1:length(model_list), function(i) draw_extract(i))
# p_link for the pred-size model. BUT how to get the total logo
p_link_asim_size <- function( pred , size = 1) {
logodds1 <- post$a_sim + post$b_pred[,pred] + post$b_size[,size]
logodds2 <- post$a_sim + post$b_pred[,pred] + post$b_size[,size+1]
logodds <- c(sample(logodds1, length(logodds1)/2), sample(logodds2, length(logodds2)/2))
return( inv_logit(logodds) )
}
# p_link for the pred-size model. BUT how to get the total logo
post <- extract.samples(m13.m1_pred_size)
p_link_asim_size <- function( pred , size = 1) {
logodds1 <- post$a_sim + post$b_pred[,pred] + post$b_size[,size]
logodds2 <- post$a_sim + post$b_pred[,pred] + post$b_size[,size+1]
logodds <- c(sample(logodds1, length(logodds1)/2), sample(logodds2, length(logodds2)/2))
return( inv_logit(logodds) )
}
p_raw_sim <- sapply(1:2, function(i) p_link_asim_size(i))
p_mu_sim <- apply(p_raw_sim, 2, mean)
View(p_link_asim)
View(p_link_asim_size)
p_link_asim(1)
post <- extract.samples(m13.m1_pred_size)
p_link_asim(1)
post <- extract.samples(m13.m1_pred) # 2000 samples
# p_link <- function( pred, tank = 1) {
#   logodds <- post$a[,tank] + post$b_pred[,pred]
#   return(inv_logit(logodds))
# }
p_link_abar <- function( pred ) {
logodds <- post$a_bar + post$b_pred[,pred]
return( inv_logit(logodds) )
}
# 1:2 for pred. Look into tank 45.
p_raw <- sapply(1:2, function(i) p_link_abar(i))
p_mu <- apply(p_raw, 2, mean)
p_ci <- apply(p_raw, 2, PI)
# density_seq <- seq(0, max(d$density)+10, length.out = 3000)
plot( propsurv ~ pred , data=d ,
xlab = "predator. 1 = no, 2 = yes", ylab= "proportion survival",
main = "average pond")
axis(1, at = 1:2, labels = c("no predators near pond", "predators present"))
lines( 1:2, p_mu , lwd=2, col = "blue" )
shade( p_ci , 1:2,  col = alpha("blue", 0.5) )
post$a_sim <- rnorm( length(post$a_bar) , post$a_bar , post$sigma_a )
p_link_asim(1)
p_link_asim(1) %>%
str()
p_link_asim_size(1) %>%
str()
p_link_asim_size <- function( pred , size = 1) {
logodds1 <- post$a_sim + post$b_pred[,pred] + post$b_size[,size]
logodds2 <- post$a_sim + post$b_pred[,pred] + post$b_size[,size+1]
logodds <- rbind(sample(logodds1, length(logodds1)/2),
sample(logodds2, length(logodds2)/2)
)
return( inv_logit(logodds) )
}
post <- extract.samples(m13.m1_pred) # 2000 samples
p_link_abar <- function( pred ) {
logodds <- post$a_bar + post$b_pred[,pred]
return( inv_logit(logodds) )
}
# 1:2 for pred. Look into tank 45.
p_raw <- sapply(1:2, function(i) p_link_abar(i))
p_mu <- apply(p_raw, 2, mean)
p_ci <- apply(p_raw, 2, PI)
# density_seq <- seq(0, max(d$density)+10, length.out = 3000)
plot( propsurv ~ pred , data=d ,
xlab = "predator. 1 = no, 2 = yes", ylab= "proportion survival",
main = "average pond")
axis(1, at = 1:2, labels = c("no predators near pond", "predators present"))
lines( 1:2, p_mu , lwd=2, col = "blue" )
shade( p_ci , 1:2,  col = alpha("blue", 0.5) )
post$a_sim <- rnorm( length(post$a_bar) , post$a_bar , post$sigma_a )
logodds <- post$a_sim + post$b_pred[,1]
logodds_fasit <- post$a_sim + post$b_pred[,1]
size = 1
logodds1 <- post$a_sim + post$b_pred[,pred] + post$b_size[,size]
pred= 1
logodds1 <- post$a_sim + post$b_pred[,pred] + post$b_size[,size]
logodds2 <- post$a_sim + post$b_pred[,pred] + post$b_size[,size+1]
logodds <- rbind(sample(logodds1, length(logodds1)/2),
sample(logodds2, length(logodds2)/2)
)
post <- extract.samples(m13.m1_pred_size)
post$a_sim <- rnorm( length(post$a_bar) , post$a_bar , post$sigma_a )
logodds1 <- post$a_sim + post$b_pred[,pred] + post$b_size[,size]
logodds2 <- post$a_sim + post$b_pred[,pred] + post$b_size[,size+1]
logodds <- rbind(sample(logodds1, length(logodds1)/2),
sample(logodds2, length(logodds2)/2)
)
logodds <- c(sample(logodds1, length(logodds1)/2),
sample(logodds2, length(logodds2)/2)
)
# p_link for the pred-size model. BUT how to get the total p using size too
post <- extract.samples(m13.m1_pred_size)
post$a_sim <- rnorm( length(post$a_bar) , post$a_bar , post$sigma_a )
############# Test
p_link_asim_size <- function( pred , size = 1) {
logodds1 <- post$a_sim + post$b_pred[,pred] + post$b_size[,size]
logodds2 <- post$a_sim + post$b_pred[,pred] + post$b_size[,size+1]
logodds <- c(sample(logodds1, length(logodds1)/2),
sample(logodds2, length(logodds2)/2)
)
return( inv_logit(logodds) )
}
##########
p_raw_sim <- sapply(1:2, function(i) p_link_asim_size(i))
p_mu_sim <- apply(p_raw_sim, 2, mean)
p_ci_sim <- apply(p_raw_sim, 2, PI)
plot( propsurv ~ pred , data=d ,
xlab = "predator. 1 = no, 2 = yes", ylab= "proportion survival",
main = "variations among ponds")
axis(1, at = 1:2, labels = c("no predators near pond", "predators present"))
lines( 1:2, p_mu_sim , lwd=2, col = "lightblue" )
shade( p_ci_sim , 1:2,  col = alpha("lightblue", 0.5) )
post <- extract.samples(m13.m1_pred) # 2000 samples
p_link_abar <- function( pred ) {
logodds <- post$a_bar + post$b_pred[,pred]
return( inv_logit(logodds) )
}
# 1:2 for pred. Look into tank 45.
p_raw <- sapply(1:2, function(i) p_link_abar(i))
p_mu <- apply(p_raw, 2, mean)
p_ci <- apply(p_raw, 2, PI)
# density_seq <- seq(0, max(d$density)+10, length.out = 3000)
plot( propsurv ~ pred , data=d ,
xlab = "predator. 1 = no, 2 = yes", ylab= "proportion survival",
main = "average pond")
axis(1, at = 1:2, labels = c("no predators near pond", "predators present"))
lines( 1:2, p_mu , lwd=2, col = "blue" )
shade( p_ci , 1:2,  col = alpha("blue", 0.5) )
post$a_sim <- rnorm( length(post$a_bar) , post$a_bar , post$sigma_a )
# as to catch the variation in ponds that we made room for in the model by defining sigma_a, we simulate ponds (see line above) based on a_bar and sigma_a.
logodds_fasit <- post$a_sim + post$b_pred[,1]
p_link_asim <- function( pred ) {
logodds <- post$a_sim + post$b_pred[,pred]
return( inv_logit(logodds) )
}
p_raw_sim <- sapply(1:2, function(i) p_link_asim(i))
p_mu_sim <- apply(p_raw_sim, 2, mean)
p_ci_sim <- apply(p_raw_sim, 2, PI)
plot( propsurv ~ pred , data=d ,
xlab = "predator. 1 = no, 2 = yes", ylab= "proportion survival",
main = "variations among ponds")
axis(1, at = 1:2, labels = c("no predators near pond", "predators present"))
lines( 1:2, p_mu_sim , lwd=2, col = "lightblue" )
shade( p_ci_sim , 1:2,  col = alpha("lightblue", 0.5) )
# pred = 1.2
p <- link( m13.m1_pred_size , data=data.frame( pred=c(1,2)  ) )
# pred = 1.2
p <- link( m13.m1_pred_size , data=data.frame( pred=c(1,2), size = c(1,2), tank = 48  ) )
p_mu <- apply( p , 2 , mean )
p_ci <- apply( p , 2 , PI )
View(p_ci_sim)
View(p_ci)
# pred = 1.2
p <- link( m13.m1_pred_size , data=data.frame( pred=c(1,2), size = c(1,2), tank = 48  ) )
p_mu <- apply( p , 2 , mean )
p_ci <- apply( p , 2 , PI )
plot( propsurv ~ pred , data=d ,
xlab = "predator. 1 = no, 2 = yes", ylab= "proportion survival",
main = "variations among ponds")
axis(1, at = 1:2, labels = c("no predators near pond", "predators present"))
lines( 1:2, p_mu , lwd=2, col = "lightblue" )
shade( p_ci , 1:2,  col = alpha("lightblue", 0.5) )
coeftab(m13.m1_0, m13.m1_pred, m13.m1_size, m13.m1_pred_size, m13.m1_pred_size_interact)
#| include: false
#| message: false
#| warning: false
#| results: hide
knitr::opts_chunk$set(echo = TRUE, dpi = 300)
library(rethinking)
library(magrittr)
library(tidyverse)
library(rstan)
library(bayesplot)
library(xfun)  # resetting RSTudio
Sys.setlocale("LC_ALL", 'en_US.UTF-8')
# add other packages you use here
#| include: false
#| message: false
#| warning: false
#| results: hide
knitr::opts_chunk$set(echo = TRUE, dpi = 300)
library(rethinking)
library(magrittr)
library(tidyverse)
library(rstan)
library(bayesplot)
library(xfun)  # resetting RSTudio
Sys.setlocale("LC_ALL", 'en_US.UTF-8')
# add other packages you use here
data(reedfrogs)
str(reedfrogs)
d <- reedfrogs %>%
mutate(tank = 1:nrow(.),
across(!propsurv, ~as.integer(.))) %>%
group_by(pred, size) %>%
mutate(pred_size4 = cur_group_id()) %>%
ungroup()
str(d)
d <- reedfrogs %>%
mutate(tank = 1:nrow(.),
across(!propsurv, ~as.integer(.))) %>%
group_by(pred, size) %>%
mutate(pred_size4 = cur_group_id()) %>%
ungroup()
str(d)
dat <- list(
S = d$surv,
N = d$density,
tank = d$tank,
pred = d$pred, # 1: no pred, 2: pred
size = d$size,  # 1:big, 2: small
pred_size4 = d$pred_size4
)
m13.m1_0 <- ulam(
alist(
S ~ dbinom( N , p ) ,
logit(p) <- a[tank],
# level 1 priors
a[tank] ~ dnorm( a_bar , sigma_a ) ,
# level 2 priors
a_bar ~ dnorm( 0 , 1.5 ) ,
sigma_a ~ dexp( 1 )
), data=dat , chains=4 , log_lik=TRUE
)
m13.m1_pred <- ulam(
alist(
S ~ dbinom( N , p ) ,
logit(p) <- a[tank] + b_pred[pred],
# level 1 priors
a[tank] ~ dnorm( a_bar , sigma_a ) ,
b_pred[pred] ~ dnorm(0, 1),
# level 2 priors
a_bar ~ dnorm( 0 , 1.5 ) ,
sigma_a ~ dexp( 1 )
), data=dat , chains=4 , log_lik=TRUE
)
m13.m1_pred_nc <- ulam(
alist(
S ~ dbinom( N , p ) ,
logit(p) <- a_bar + z[tank]*sigma_a + b_pred[pred],
# level 1 priors
z[tank] ~ normal( 0, 1),
b_pred[pred] ~ dnorm(0, 1),
a_bar ~ dnorm( 0 , 1.5 ),
sigma_a ~ dexp( 1 ),
gq > vector[tank]:a <<- a_bar + z*sigma_a
), data=dat , chains=4 , log_lik=TRUE
)
post <- extract.samples(m13.m1_pred_size)
post$a_sim <- rnorm( length(post$a_bar) , post$a_bar , post$sigma_a )
p_link_asim_size <- function( pred , size = 1) {
logodds1 <- post$a_sim + post$b_pred[,pred] + post$b_size[,size]
logodds2 <- post$a_sim + post$b_pred[,pred] + post$b_size[,size+1]
logodds <- c(sample(logodds1, length(logodds1)/2),
sample(logodds2, length(logodds2)/2)
)
return( inv_logit(logodds) )
}
##########
p_raw_sim <- sapply(1:2, function(i) p_link_asim_size(i))
p_mu_sim <- apply(p_raw_sim, 2, mean)
p_ci_sim <- apply(p_raw_sim, 2, PI)
plot( propsurv ~ pred , data=d ,
xlab = "predator. 1 = no, 2 = yes", ylab= "proportion survival",
main = "variations among ponds")
axis(1, at = 1:2, labels = c("no predators near pond", "predators present"))
plot( propsurv ~ pred , data=d ,
xlab = "predator. 1 = no, 2 = yes",
ylab= "proportion survival",
main = "variations among ponds")
axis(1, at = 1:2, labels = c("no predators near pond", "predators present"))
lines( 1:2, p_mu_sim , lwd=2, col = "lightblue" )
shade( p_ci_sim , 1:2,  col = alpha("lightblue", 0.5) )
plot( propsurv ~ pred , data=d ,
xlab = "predator. 1 = no, 2 = yes",
ylab= "proportion survival",
main = "variations among ponds")
# p_link for the pred-size model. BUT how to get the total p using size too
post <- extract.samples(m13.m1_pred_size)
post$a_sim <- rnorm( length(post$a_bar) , post$a_bar , post$sigma_a )
p_link_asim_size <- function( pred , size = 1) {
logodds1 <- post$a_sim + post$b_pred[,pred] + post$b_size[,size]
logodds2 <- post$a_sim + post$b_pred[,pred] + post$b_size[,size+1]
logodds <- c(sample(logodds1, length(logodds1)/2),
sample(logodds2, length(logodds2)/2)
)
return( inv_logit(logodds) )
}
##########
p_raw_sim <- sapply(1:2, function(i) p_link_asim_size(i))
p_mu_sim <- apply(p_raw_sim, 2, mean)
p_ci_sim <- apply(p_raw_sim, 2, PI)
plot( propsurv ~ pred , data=d ,
xlab = "predator. 1 = no, 2 = yes",
ylab= "proportion survival",
main = "variations among ponds")
axis(1, at = 1:2, labels = c("no predators near pond", "predators present"))
lines( 1:2, p_mu_sim , lwd=2, col = "lightblue" )
shade( p_ci_sim , 1:2,  col = alpha("lightblue", 0.5) )
#not sure what im doing here compared to the other code chunks. im confused
# pred = 1.2
p <- link( m13.m1_pred_size , data=data.frame( pred=c(1,2), size = c(1,2), tank = 48  ) )
p_mu <- apply( p , 2 , mean )
p_ci <- apply( p , 2 , PI )
plot( propsurv ~ pred , data=d ,
xlab = "predator. 1 = no, 2 = yes", ylab= "proportion survival",
main = "variations among ponds. pred-size model")
axis(1, at = 1:2, labels = c("no predators near pond", "predators present"))
lines( 1:2, p_mu , lwd=2, col = "lightblue" )
shade( p_ci , 1:2,  col = alpha("lightblue", 0.5) )
par(mfrow = c(1, length(model_list)))
plot( propsurv ~ pred , data=d ,
xlab = "predator. 1 = no, 2 = yes", ylab= "proportion survival",
main = "variations among ponds")
axis(1, at = 1:2, labels = c("no predators near pond", "predators present"))
plot_lines <- sapply(1:length(model_list), function(i) draw_extract(i))
exp(0.1)
